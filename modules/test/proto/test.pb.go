// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestConfig struct {
	Servers              map[string]*TestServer `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IpUrl                string                 `protobuf:"bytes,2,opt,name=ip_url,json=ipUrl,proto3" json:"ip_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TestConfig) Reset()         { *m = TestConfig{} }
func (m *TestConfig) String() string { return proto.CompactTextString(m) }
func (*TestConfig) ProtoMessage()    {}
func (*TestConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_e09f5f85b3a22776, []int{0}
}
func (m *TestConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestConfig.Unmarshal(m, b)
}
func (m *TestConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestConfig.Marshal(b, m, deterministic)
}
func (dst *TestConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestConfig.Merge(dst, src)
}
func (m *TestConfig) XXX_Size() int {
	return xxx_messageInfo_TestConfig.Size(m)
}
func (m *TestConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TestConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TestConfig proto.InternalMessageInfo

func (m *TestConfig) GetServers() map[string]*TestServer {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *TestConfig) GetIpUrl() string {
	if m != nil {
		return m.IpUrl
	}
	return ""
}

type TestServer struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestServer) Reset()         { *m = TestServer{} }
func (m *TestServer) String() string { return proto.CompactTextString(m) }
func (*TestServer) ProtoMessage()    {}
func (*TestServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_e09f5f85b3a22776, []int{1}
}
func (m *TestServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestServer.Unmarshal(m, b)
}
func (m *TestServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestServer.Marshal(b, m, deterministic)
}
func (dst *TestServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestServer.Merge(dst, src)
}
func (m *TestServer) XXX_Size() int {
	return xxx_messageInfo_TestServer.Size(m)
}
func (m *TestServer) XXX_DiscardUnknown() {
	xxx_messageInfo_TestServer.DiscardUnknown(m)
}

var xxx_messageInfo_TestServer proto.InternalMessageInfo

func (m *TestServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestServer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *TestServer) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*TestConfig)(nil), "proto.TestConfig")
	proto.RegisterMapType((map[string]*TestServer)(nil), "proto.TestConfig.ServersEntry")
	proto.RegisterType((*TestServer)(nil), "proto.TestServer")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_test_e09f5f85b3a22776) }

var fileDescriptor_test_e09f5f85b3a22776 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x6b, 0x18, 0xb9, 0xb8, 0x42,
	0x52, 0x8b, 0x4b, 0x9c, 0xf3, 0xf3, 0xd2, 0x32, 0xd3, 0x85, 0x2c, 0xb8, 0xd8, 0x8b, 0x53, 0x8b,
	0xca, 0x52, 0x8b, 0x8a, 0x25, 0x18, 0x15, 0x98, 0x35, 0xb8, 0x8d, 0xe4, 0x20, 0xca, 0xf5, 0x10,
	0x6a, 0xf4, 0x82, 0x21, 0x0a, 0x5c, 0xf3, 0x4a, 0x8a, 0x2a, 0x83, 0x60, 0xca, 0x85, 0x44, 0xb9,
	0xd8, 0x32, 0x0b, 0xe2, 0x4b, 0x8b, 0x72, 0x24, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0x58, 0x33,
	0x0b, 0x42, 0x8b, 0x72, 0xa4, 0x7c, 0xb9, 0x78, 0x90, 0xd5, 0x0b, 0x09, 0x70, 0x31, 0x67, 0xa7,
	0x56, 0x4a, 0x30, 0x82, 0xd5, 0x80, 0x98, 0x42, 0xea, 0x5c, 0xac, 0x65, 0x89, 0x39, 0xa5, 0xa9,
	0x60, 0x7d, 0xdc, 0x46, 0x82, 0x48, 0x16, 0x42, 0x74, 0x06, 0x41, 0xe4, 0xad, 0x98, 0x2c, 0x18,
	0x95, 0x5c, 0x20, 0xae, 0x85, 0x48, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x42, 0x4d,
	0x03, 0xb3, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x0b, 0xa0, 0x6e, 0x60, 0xca, 0x2c, 0x00, 0xa9, 0x29,
	0xc8, 0x2f, 0x2a, 0x91, 0x60, 0x56, 0x60, 0xd4, 0x60, 0x0d, 0x02, 0xb3, 0x93, 0xd8, 0xc0, 0x56,
	0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x6d, 0xef, 0xa6, 0x10, 0x01, 0x00, 0x00,
}
