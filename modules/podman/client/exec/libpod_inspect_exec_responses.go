// Code generated by go-swagger; DO NOT EDIT.

package exec

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodInspectExecReader is a Reader for the LibpodInspectExec structure.
type LibpodInspectExecReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodInspectExecReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLibpodInspectExecOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewLibpodInspectExecNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodInspectExecInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodInspectExecOK creates a LibpodInspectExecOK with default headers values
func NewLibpodInspectExecOK() *LibpodInspectExecOK {
	return &LibpodInspectExecOK{}
}

/*LibpodInspectExecOK handles this case with default header values.

no error
*/
type LibpodInspectExecOK struct {
}

func (o *LibpodInspectExecOK) Error() string {
	return fmt.Sprintf("[GET /libpod/exec/{id}/json][%d] libpodInspectExecOK ", 200)
}

func (o *LibpodInspectExecOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodInspectExecNotFound creates a LibpodInspectExecNotFound with default headers values
func NewLibpodInspectExecNotFound() *LibpodInspectExecNotFound {
	return &LibpodInspectExecNotFound{}
}

/*LibpodInspectExecNotFound handles this case with default header values.

No such exec instance
*/
type LibpodInspectExecNotFound struct {
	Payload *LibpodInspectExecNotFoundBody
}

func (o *LibpodInspectExecNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/exec/{id}/json][%d] libpodInspectExecNotFound  %+v", 404, o.Payload)
}

func (o *LibpodInspectExecNotFound) GetPayload() *LibpodInspectExecNotFoundBody {
	return o.Payload
}

func (o *LibpodInspectExecNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodInspectExecNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodInspectExecInternalServerError creates a LibpodInspectExecInternalServerError with default headers values
func NewLibpodInspectExecInternalServerError() *LibpodInspectExecInternalServerError {
	return &LibpodInspectExecInternalServerError{}
}

/*LibpodInspectExecInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodInspectExecInternalServerError struct {
	Payload *LibpodInspectExecInternalServerErrorBody
}

func (o *LibpodInspectExecInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/exec/{id}/json][%d] libpodInspectExecInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodInspectExecInternalServerError) GetPayload() *LibpodInspectExecInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodInspectExecInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodInspectExecInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodInspectExecInternalServerErrorBody libpod inspect exec internal server error body
swagger:model LibpodInspectExecInternalServerErrorBody
*/
type LibpodInspectExecInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod inspect exec internal server error body
func (o *LibpodInspectExecInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod inspect exec internal server error body based on context it is used
func (o *LibpodInspectExecInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodInspectExecInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodInspectExecInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodInspectExecInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodInspectExecNotFoundBody libpod inspect exec not found body
swagger:model LibpodInspectExecNotFoundBody
*/
type LibpodInspectExecNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod inspect exec not found body
func (o *LibpodInspectExecNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod inspect exec not found body based on context it is used
func (o *LibpodInspectExecNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodInspectExecNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodInspectExecNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodInspectExecNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
