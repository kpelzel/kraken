// Code generated by go-swagger; DO NOT EDIT.

package exec

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewLibpodStartExecParams creates a new LibpodStartExecParams object
// with the default values initialized.
func NewLibpodStartExecParams() *LibpodStartExecParams {
	var ()
	return &LibpodStartExecParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewLibpodStartExecParamsWithTimeout creates a new LibpodStartExecParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewLibpodStartExecParamsWithTimeout(timeout time.Duration) *LibpodStartExecParams {
	var ()
	return &LibpodStartExecParams{

		timeout: timeout,
	}
}

// NewLibpodStartExecParamsWithContext creates a new LibpodStartExecParams object
// with the default values initialized, and the ability to set a context for a request
func NewLibpodStartExecParamsWithContext(ctx context.Context) *LibpodStartExecParams {
	var ()
	return &LibpodStartExecParams{

		Context: ctx,
	}
}

// NewLibpodStartExecParamsWithHTTPClient creates a new LibpodStartExecParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewLibpodStartExecParamsWithHTTPClient(client *http.Client) *LibpodStartExecParams {
	var ()
	return &LibpodStartExecParams{
		HTTPClient: client,
	}
}

/*LibpodStartExecParams contains all the parameters to send to the API endpoint
for the libpod start exec operation typically these are written to a http.Request
*/
type LibpodStartExecParams struct {

	/*Control
	  Attributes for start

	*/
	Control LibpodStartExecBody
	/*ID
	  Exec instance ID

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the libpod start exec params
func (o *LibpodStartExecParams) WithTimeout(timeout time.Duration) *LibpodStartExecParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the libpod start exec params
func (o *LibpodStartExecParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the libpod start exec params
func (o *LibpodStartExecParams) WithContext(ctx context.Context) *LibpodStartExecParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the libpod start exec params
func (o *LibpodStartExecParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the libpod start exec params
func (o *LibpodStartExecParams) WithHTTPClient(client *http.Client) *LibpodStartExecParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the libpod start exec params
func (o *LibpodStartExecParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithControl adds the control to the libpod start exec params
func (o *LibpodStartExecParams) WithControl(control LibpodStartExecBody) *LibpodStartExecParams {
	o.SetControl(control)
	return o
}

// SetControl adds the control to the libpod start exec params
func (o *LibpodStartExecParams) SetControl(control LibpodStartExecBody) {
	o.Control = control
}

// WithID adds the id to the libpod start exec params
func (o *LibpodStartExecParams) WithID(id string) *LibpodStartExecParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the libpod start exec params
func (o *LibpodStartExecParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *LibpodStartExecParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Control); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
