// Code generated by go-swagger; DO NOT EDIT.

package exec

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodCreateExecReader is a Reader for the LibpodCreateExec structure.
type LibpodCreateExecReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodCreateExecReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewLibpodCreateExecCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewLibpodCreateExecNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewLibpodCreateExecConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodCreateExecInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodCreateExecCreated creates a LibpodCreateExecCreated with default headers values
func NewLibpodCreateExecCreated() *LibpodCreateExecCreated {
	return &LibpodCreateExecCreated{}
}

/*LibpodCreateExecCreated handles this case with default header values.

no error
*/
type LibpodCreateExecCreated struct {
}

func (o *LibpodCreateExecCreated) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/exec][%d] libpodCreateExecCreated ", 201)
}

func (o *LibpodCreateExecCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodCreateExecNotFound creates a LibpodCreateExecNotFound with default headers values
func NewLibpodCreateExecNotFound() *LibpodCreateExecNotFound {
	return &LibpodCreateExecNotFound{}
}

/*LibpodCreateExecNotFound handles this case with default header values.

No such container
*/
type LibpodCreateExecNotFound struct {
	Payload *LibpodCreateExecNotFoundBody
}

func (o *LibpodCreateExecNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/exec][%d] libpodCreateExecNotFound  %+v", 404, o.Payload)
}

func (o *LibpodCreateExecNotFound) GetPayload() *LibpodCreateExecNotFoundBody {
	return o.Payload
}

func (o *LibpodCreateExecNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodCreateExecNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodCreateExecConflict creates a LibpodCreateExecConflict with default headers values
func NewLibpodCreateExecConflict() *LibpodCreateExecConflict {
	return &LibpodCreateExecConflict{}
}

/*LibpodCreateExecConflict handles this case with default header values.

container is paused
*/
type LibpodCreateExecConflict struct {
}

func (o *LibpodCreateExecConflict) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/exec][%d] libpodCreateExecConflict ", 409)
}

func (o *LibpodCreateExecConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodCreateExecInternalServerError creates a LibpodCreateExecInternalServerError with default headers values
func NewLibpodCreateExecInternalServerError() *LibpodCreateExecInternalServerError {
	return &LibpodCreateExecInternalServerError{}
}

/*LibpodCreateExecInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodCreateExecInternalServerError struct {
	Payload *LibpodCreateExecInternalServerErrorBody
}

func (o *LibpodCreateExecInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/exec][%d] libpodCreateExecInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodCreateExecInternalServerError) GetPayload() *LibpodCreateExecInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodCreateExecInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodCreateExecInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodCreateExecBody libpod create exec body
swagger:model LibpodCreateExecBody
*/
type LibpodCreateExecBody struct {

	// Attach to stderr of the exec command
	AttachStderr bool `json:"AttachStderr,omitempty"`

	// Attach to stdin of the exec command
	AttachStdin bool `json:"AttachStdin,omitempty"`

	// Attach to stdout of the exec command
	AttachStdout bool `json:"AttachStdout,omitempty"`

	// Command to run, as a string or array of strings.
	Cmd []string `json:"Cmd"`

	// "Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _."
	//
	DetachKeys string `json:"DetachKeys,omitempty"`

	// A list of environment variables in the form ["VAR=value", ...]
	Env []string `json:"Env"`

	// Runs the exec process with extended privileges
	Privileged *bool `json:"Privileged,omitempty"`

	// Allocate a pseudo-TTY
	Tty bool `json:"Tty,omitempty"`

	// "The user, and optionally, group to run the exec process inside the container. Format is one of: user, user:group, uid, or uid:gid."
	//
	User string `json:"User,omitempty"`

	// The working directory for the exec process inside the container.
	WorkingDir string `json:"WorkingDir,omitempty"`
}

// Validate validates this libpod create exec body
func (o *LibpodCreateExecBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod create exec body based on context it is used
func (o *LibpodCreateExecBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodCreateExecBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodCreateExecBody) UnmarshalBinary(b []byte) error {
	var res LibpodCreateExecBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodCreateExecInternalServerErrorBody libpod create exec internal server error body
swagger:model LibpodCreateExecInternalServerErrorBody
*/
type LibpodCreateExecInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod create exec internal server error body
func (o *LibpodCreateExecInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod create exec internal server error body based on context it is used
func (o *LibpodCreateExecInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodCreateExecInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodCreateExecInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodCreateExecInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodCreateExecNotFoundBody libpod create exec not found body
swagger:model LibpodCreateExecNotFoundBody
*/
type LibpodCreateExecNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod create exec not found body
func (o *LibpodCreateExecNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod create exec not found body based on context it is used
func (o *LibpodCreateExecNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodCreateExecNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodCreateExecNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodCreateExecNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
