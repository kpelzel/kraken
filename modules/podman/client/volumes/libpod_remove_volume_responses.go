// Code generated by go-swagger; DO NOT EDIT.

package volumes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodRemoveVolumeReader is a Reader for the LibpodRemoveVolume structure.
type LibpodRemoveVolumeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodRemoveVolumeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewLibpodRemoveVolumeNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewLibpodRemoveVolumeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewLibpodRemoveVolumeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodRemoveVolumeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodRemoveVolumeNoContent creates a LibpodRemoveVolumeNoContent with default headers values
func NewLibpodRemoveVolumeNoContent() *LibpodRemoveVolumeNoContent {
	return &LibpodRemoveVolumeNoContent{}
}

/*LibpodRemoveVolumeNoContent handles this case with default header values.

no error
*/
type LibpodRemoveVolumeNoContent struct {
}

func (o *LibpodRemoveVolumeNoContent) Error() string {
	return fmt.Sprintf("[DELETE /libpod/volumes/{name}][%d] libpodRemoveVolumeNoContent ", 204)
}

func (o *LibpodRemoveVolumeNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodRemoveVolumeNotFound creates a LibpodRemoveVolumeNotFound with default headers values
func NewLibpodRemoveVolumeNotFound() *LibpodRemoveVolumeNotFound {
	return &LibpodRemoveVolumeNotFound{}
}

/*LibpodRemoveVolumeNotFound handles this case with default header values.

No such volume
*/
type LibpodRemoveVolumeNotFound struct {
	Payload *LibpodRemoveVolumeNotFoundBody
}

func (o *LibpodRemoveVolumeNotFound) Error() string {
	return fmt.Sprintf("[DELETE /libpod/volumes/{name}][%d] libpodRemoveVolumeNotFound  %+v", 404, o.Payload)
}

func (o *LibpodRemoveVolumeNotFound) GetPayload() *LibpodRemoveVolumeNotFoundBody {
	return o.Payload
}

func (o *LibpodRemoveVolumeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveVolumeNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodRemoveVolumeConflict creates a LibpodRemoveVolumeConflict with default headers values
func NewLibpodRemoveVolumeConflict() *LibpodRemoveVolumeConflict {
	return &LibpodRemoveVolumeConflict{}
}

/*LibpodRemoveVolumeConflict handles this case with default header values.

Volume is in use and cannot be removed
*/
type LibpodRemoveVolumeConflict struct {
}

func (o *LibpodRemoveVolumeConflict) Error() string {
	return fmt.Sprintf("[DELETE /libpod/volumes/{name}][%d] libpodRemoveVolumeConflict ", 409)
}

func (o *LibpodRemoveVolumeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodRemoveVolumeInternalServerError creates a LibpodRemoveVolumeInternalServerError with default headers values
func NewLibpodRemoveVolumeInternalServerError() *LibpodRemoveVolumeInternalServerError {
	return &LibpodRemoveVolumeInternalServerError{}
}

/*LibpodRemoveVolumeInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodRemoveVolumeInternalServerError struct {
	Payload *LibpodRemoveVolumeInternalServerErrorBody
}

func (o *LibpodRemoveVolumeInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /libpod/volumes/{name}][%d] libpodRemoveVolumeInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodRemoveVolumeInternalServerError) GetPayload() *LibpodRemoveVolumeInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodRemoveVolumeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveVolumeInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodRemoveVolumeInternalServerErrorBody libpod remove volume internal server error body
swagger:model LibpodRemoveVolumeInternalServerErrorBody
*/
type LibpodRemoveVolumeInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove volume internal server error body
func (o *LibpodRemoveVolumeInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove volume internal server error body based on context it is used
func (o *LibpodRemoveVolumeInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveVolumeInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveVolumeInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveVolumeInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodRemoveVolumeNotFoundBody libpod remove volume not found body
swagger:model LibpodRemoveVolumeNotFoundBody
*/
type LibpodRemoveVolumeNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove volume not found body
func (o *LibpodRemoveVolumeNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove volume not found body based on context it is used
func (o *LibpodRemoveVolumeNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveVolumeNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveVolumeNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveVolumeNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
