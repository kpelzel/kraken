// Code generated by go-swagger; DO NOT EDIT.

package manifests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/hpc/kraken/modules/podman/models"
)

// InspectReader is a Reader for the Inspect structure.
type InspectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InspectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInspectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewInspectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInspectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInspectOK creates a InspectOK with default headers values
func NewInspectOK() *InspectOK {
	return &InspectOK{}
}

/*InspectOK handles this case with default header values.

Inspect Manifest
*/
type InspectOK struct {
	Payload *models.List
}

func (o *InspectOK) Error() string {
	return fmt.Sprintf("[GET /libpod/manifests/{name:.*}/json][%d] inspectOK  %+v", 200, o.Payload)
}

func (o *InspectOK) GetPayload() *models.List {
	return o.Payload
}

func (o *InspectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.List)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInspectNotFound creates a InspectNotFound with default headers values
func NewInspectNotFound() *InspectNotFound {
	return &InspectNotFound{}
}

/*InspectNotFound handles this case with default header values.

No such manifest
*/
type InspectNotFound struct {
	Payload *InspectNotFoundBody
}

func (o *InspectNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/manifests/{name:.*}/json][%d] inspectNotFound  %+v", 404, o.Payload)
}

func (o *InspectNotFound) GetPayload() *InspectNotFoundBody {
	return o.Payload
}

func (o *InspectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InspectNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInspectInternalServerError creates a InspectInternalServerError with default headers values
func NewInspectInternalServerError() *InspectInternalServerError {
	return &InspectInternalServerError{}
}

/*InspectInternalServerError handles this case with default header values.

Internal server error
*/
type InspectInternalServerError struct {
	Payload *InspectInternalServerErrorBody
}

func (o *InspectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/manifests/{name:.*}/json][%d] inspectInternalServerError  %+v", 500, o.Payload)
}

func (o *InspectInternalServerError) GetPayload() *InspectInternalServerErrorBody {
	return o.Payload
}

func (o *InspectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InspectInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*InspectInternalServerErrorBody inspect internal server error body
swagger:model InspectInternalServerErrorBody
*/
type InspectInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this inspect internal server error body
func (o *InspectInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this inspect internal server error body based on context it is used
func (o *InspectInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InspectInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InspectInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res InspectInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*InspectNotFoundBody inspect not found body
swagger:model InspectNotFoundBody
*/
type InspectNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this inspect not found body
func (o *InspectNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this inspect not found body based on context it is used
func (o *InspectNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *InspectNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InspectNotFoundBody) UnmarshalBinary(b []byte) error {
	var res InspectNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
