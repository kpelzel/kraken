// Code generated by go-swagger; DO NOT EDIT.

package pods

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PodExistsReader is a Reader for the PodExists structure.
type PodExistsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PodExistsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPodExistsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPodExistsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPodExistsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPodExistsNoContent creates a PodExistsNoContent with default headers values
func NewPodExistsNoContent() *PodExistsNoContent {
	return &PodExistsNoContent{}
}

/*PodExistsNoContent handles this case with default header values.

pod exists
*/
type PodExistsNoContent struct {
}

func (o *PodExistsNoContent) Error() string {
	return fmt.Sprintf("[GET /libpod/pods/{name}/exists][%d] podExistsNoContent ", 204)
}

func (o *PodExistsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPodExistsNotFound creates a PodExistsNotFound with default headers values
func NewPodExistsNotFound() *PodExistsNotFound {
	return &PodExistsNotFound{}
}

/*PodExistsNotFound handles this case with default header values.

No such pod
*/
type PodExistsNotFound struct {
	Payload *PodExistsNotFoundBody
}

func (o *PodExistsNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/pods/{name}/exists][%d] podExistsNotFound  %+v", 404, o.Payload)
}

func (o *PodExistsNotFound) GetPayload() *PodExistsNotFoundBody {
	return o.Payload
}

func (o *PodExistsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PodExistsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPodExistsInternalServerError creates a PodExistsInternalServerError with default headers values
func NewPodExistsInternalServerError() *PodExistsInternalServerError {
	return &PodExistsInternalServerError{}
}

/*PodExistsInternalServerError handles this case with default header values.

Internal server error
*/
type PodExistsInternalServerError struct {
	Payload *PodExistsInternalServerErrorBody
}

func (o *PodExistsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/pods/{name}/exists][%d] podExistsInternalServerError  %+v", 500, o.Payload)
}

func (o *PodExistsInternalServerError) GetPayload() *PodExistsInternalServerErrorBody {
	return o.Payload
}

func (o *PodExistsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PodExistsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PodExistsInternalServerErrorBody pod exists internal server error body
swagger:model PodExistsInternalServerErrorBody
*/
type PodExistsInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this pod exists internal server error body
func (o *PodExistsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pod exists internal server error body based on context it is used
func (o *PodExistsInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PodExistsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PodExistsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res PodExistsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PodExistsNotFoundBody pod exists not found body
swagger:model PodExistsNotFoundBody
*/
type PodExistsNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this pod exists not found body
func (o *PodExistsNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this pod exists not found body based on context it is used
func (o *PodExistsNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PodExistsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PodExistsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PodExistsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
