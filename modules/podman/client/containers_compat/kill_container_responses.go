// Code generated by go-swagger; DO NOT EDIT.

package containers_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KillContainerReader is a Reader for the KillContainer structure.
type KillContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KillContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewKillContainerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewKillContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewKillContainerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKillContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKillContainerNoContent creates a KillContainerNoContent with default headers values
func NewKillContainerNoContent() *KillContainerNoContent {
	return &KillContainerNoContent{}
}

/*KillContainerNoContent handles this case with default header values.

no error
*/
type KillContainerNoContent struct {
}

func (o *KillContainerNoContent) Error() string {
	return fmt.Sprintf("[POST /containers/{name}/kill][%d] killContainerNoContent ", 204)
}

func (o *KillContainerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewKillContainerNotFound creates a KillContainerNotFound with default headers values
func NewKillContainerNotFound() *KillContainerNotFound {
	return &KillContainerNotFound{}
}

/*KillContainerNotFound handles this case with default header values.

No such container
*/
type KillContainerNotFound struct {
	Payload *KillContainerNotFoundBody
}

func (o *KillContainerNotFound) Error() string {
	return fmt.Sprintf("[POST /containers/{name}/kill][%d] killContainerNotFound  %+v", 404, o.Payload)
}

func (o *KillContainerNotFound) GetPayload() *KillContainerNotFoundBody {
	return o.Payload
}

func (o *KillContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KillContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKillContainerConflict creates a KillContainerConflict with default headers values
func NewKillContainerConflict() *KillContainerConflict {
	return &KillContainerConflict{}
}

/*KillContainerConflict handles this case with default header values.

Conflict error in operation
*/
type KillContainerConflict struct {
	Payload *KillContainerConflictBody
}

func (o *KillContainerConflict) Error() string {
	return fmt.Sprintf("[POST /containers/{name}/kill][%d] killContainerConflict  %+v", 409, o.Payload)
}

func (o *KillContainerConflict) GetPayload() *KillContainerConflictBody {
	return o.Payload
}

func (o *KillContainerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KillContainerConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKillContainerInternalServerError creates a KillContainerInternalServerError with default headers values
func NewKillContainerInternalServerError() *KillContainerInternalServerError {
	return &KillContainerInternalServerError{}
}

/*KillContainerInternalServerError handles this case with default header values.

Internal server error
*/
type KillContainerInternalServerError struct {
	Payload *KillContainerInternalServerErrorBody
}

func (o *KillContainerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /containers/{name}/kill][%d] killContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *KillContainerInternalServerError) GetPayload() *KillContainerInternalServerErrorBody {
	return o.Payload
}

func (o *KillContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KillContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*KillContainerConflictBody kill container conflict body
swagger:model KillContainerConflictBody
*/
type KillContainerConflictBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this kill container conflict body
func (o *KillContainerConflictBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kill container conflict body based on context it is used
func (o *KillContainerConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KillContainerConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KillContainerConflictBody) UnmarshalBinary(b []byte) error {
	var res KillContainerConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*KillContainerInternalServerErrorBody kill container internal server error body
swagger:model KillContainerInternalServerErrorBody
*/
type KillContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this kill container internal server error body
func (o *KillContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kill container internal server error body based on context it is used
func (o *KillContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KillContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KillContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res KillContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*KillContainerNotFoundBody kill container not found body
swagger:model KillContainerNotFoundBody
*/
type KillContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this kill container not found body
func (o *KillContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this kill container not found body based on context it is used
func (o *KillContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KillContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KillContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res KillContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
