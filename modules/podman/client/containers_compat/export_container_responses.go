// Code generated by go-swagger; DO NOT EDIT.

package containers_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ExportContainerReader is a Reader for the ExportContainer structure.
type ExportContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportContainerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewExportContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewExportContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewExportContainerOK creates a ExportContainerOK with default headers values
func NewExportContainerOK() *ExportContainerOK {
	return &ExportContainerOK{}
}

/*ExportContainerOK handles this case with default header values.

tarball is returned in body
*/
type ExportContainerOK struct {
}

func (o *ExportContainerOK) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/export][%d] exportContainerOK ", 200)
}

func (o *ExportContainerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExportContainerNotFound creates a ExportContainerNotFound with default headers values
func NewExportContainerNotFound() *ExportContainerNotFound {
	return &ExportContainerNotFound{}
}

/*ExportContainerNotFound handles this case with default header values.

No such container
*/
type ExportContainerNotFound struct {
	Payload *ExportContainerNotFoundBody
}

func (o *ExportContainerNotFound) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/export][%d] exportContainerNotFound  %+v", 404, o.Payload)
}

func (o *ExportContainerNotFound) GetPayload() *ExportContainerNotFoundBody {
	return o.Payload
}

func (o *ExportContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExportContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportContainerInternalServerError creates a ExportContainerInternalServerError with default headers values
func NewExportContainerInternalServerError() *ExportContainerInternalServerError {
	return &ExportContainerInternalServerError{}
}

/*ExportContainerInternalServerError handles this case with default header values.

Internal server error
*/
type ExportContainerInternalServerError struct {
	Payload *ExportContainerInternalServerErrorBody
}

func (o *ExportContainerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/export][%d] exportContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *ExportContainerInternalServerError) GetPayload() *ExportContainerInternalServerErrorBody {
	return o.Payload
}

func (o *ExportContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ExportContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ExportContainerInternalServerErrorBody export container internal server error body
swagger:model ExportContainerInternalServerErrorBody
*/
type ExportContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this export container internal server error body
func (o *ExportContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this export container internal server error body based on context it is used
func (o *ExportContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExportContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExportContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res ExportContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ExportContainerNotFoundBody export container not found body
swagger:model ExportContainerNotFoundBody
*/
type ExportContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this export container not found body
func (o *ExportContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this export container not found body based on context it is used
func (o *ExportContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ExportContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ExportContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res ExportContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
