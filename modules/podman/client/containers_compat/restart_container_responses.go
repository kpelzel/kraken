// Code generated by go-swagger; DO NOT EDIT.

package containers_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RestartContainerReader is a Reader for the RestartContainer structure.
type RestartContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestartContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRestartContainerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewRestartContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestartContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRestartContainerNoContent creates a RestartContainerNoContent with default headers values
func NewRestartContainerNoContent() *RestartContainerNoContent {
	return &RestartContainerNoContent{}
}

/*RestartContainerNoContent handles this case with default header values.

no error
*/
type RestartContainerNoContent struct {
}

func (o *RestartContainerNoContent) Error() string {
	return fmt.Sprintf("[POST /containers/{name}/restart][%d] restartContainerNoContent ", 204)
}

func (o *RestartContainerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestartContainerNotFound creates a RestartContainerNotFound with default headers values
func NewRestartContainerNotFound() *RestartContainerNotFound {
	return &RestartContainerNotFound{}
}

/*RestartContainerNotFound handles this case with default header values.

No such container
*/
type RestartContainerNotFound struct {
	Payload *RestartContainerNotFoundBody
}

func (o *RestartContainerNotFound) Error() string {
	return fmt.Sprintf("[POST /containers/{name}/restart][%d] restartContainerNotFound  %+v", 404, o.Payload)
}

func (o *RestartContainerNotFound) GetPayload() *RestartContainerNotFoundBody {
	return o.Payload
}

func (o *RestartContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RestartContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestartContainerInternalServerError creates a RestartContainerInternalServerError with default headers values
func NewRestartContainerInternalServerError() *RestartContainerInternalServerError {
	return &RestartContainerInternalServerError{}
}

/*RestartContainerInternalServerError handles this case with default header values.

Internal server error
*/
type RestartContainerInternalServerError struct {
	Payload *RestartContainerInternalServerErrorBody
}

func (o *RestartContainerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /containers/{name}/restart][%d] restartContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *RestartContainerInternalServerError) GetPayload() *RestartContainerInternalServerErrorBody {
	return o.Payload
}

func (o *RestartContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RestartContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*RestartContainerInternalServerErrorBody restart container internal server error body
swagger:model RestartContainerInternalServerErrorBody
*/
type RestartContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this restart container internal server error body
func (o *RestartContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this restart container internal server error body based on context it is used
func (o *RestartContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RestartContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RestartContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res RestartContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RestartContainerNotFoundBody restart container not found body
swagger:model RestartContainerNotFoundBody
*/
type RestartContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this restart container not found body
func (o *RestartContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this restart container not found body based on context it is used
func (o *RestartContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RestartContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RestartContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res RestartContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
