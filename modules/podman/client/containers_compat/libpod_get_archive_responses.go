// Code generated by go-swagger; DO NOT EDIT.

package containers_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodGetArchiveReader is a Reader for the LibpodGetArchive structure.
type LibpodGetArchiveReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *LibpodGetArchiveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLibpodGetArchiveOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLibpodGetArchiveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLibpodGetArchiveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodGetArchiveInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodGetArchiveOK creates a LibpodGetArchiveOK with default headers values
func NewLibpodGetArchiveOK(writer io.Writer) *LibpodGetArchiveOK {
	return &LibpodGetArchiveOK{
		Payload: writer,
	}
}

/*LibpodGetArchiveOK handles this case with default header values.

no error
*/
type LibpodGetArchiveOK struct {
	Payload io.Writer
}

func (o *LibpodGetArchiveOK) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/copy][%d] libpodGetArchiveOK  %+v", 200, o.Payload)
}

func (o *LibpodGetArchiveOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *LibpodGetArchiveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodGetArchiveBadRequest creates a LibpodGetArchiveBadRequest with default headers values
func NewLibpodGetArchiveBadRequest() *LibpodGetArchiveBadRequest {
	return &LibpodGetArchiveBadRequest{}
}

/*LibpodGetArchiveBadRequest handles this case with default header values.

Bad parameter in request
*/
type LibpodGetArchiveBadRequest struct {
	Payload *LibpodGetArchiveBadRequestBody
}

func (o *LibpodGetArchiveBadRequest) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/copy][%d] libpodGetArchiveBadRequest  %+v", 400, o.Payload)
}

func (o *LibpodGetArchiveBadRequest) GetPayload() *LibpodGetArchiveBadRequestBody {
	return o.Payload
}

func (o *LibpodGetArchiveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodGetArchiveBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodGetArchiveNotFound creates a LibpodGetArchiveNotFound with default headers values
func NewLibpodGetArchiveNotFound() *LibpodGetArchiveNotFound {
	return &LibpodGetArchiveNotFound{}
}

/*LibpodGetArchiveNotFound handles this case with default header values.

No such container
*/
type LibpodGetArchiveNotFound struct {
	Payload *LibpodGetArchiveNotFoundBody
}

func (o *LibpodGetArchiveNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/copy][%d] libpodGetArchiveNotFound  %+v", 404, o.Payload)
}

func (o *LibpodGetArchiveNotFound) GetPayload() *LibpodGetArchiveNotFoundBody {
	return o.Payload
}

func (o *LibpodGetArchiveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodGetArchiveNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodGetArchiveInternalServerError creates a LibpodGetArchiveInternalServerError with default headers values
func NewLibpodGetArchiveInternalServerError() *LibpodGetArchiveInternalServerError {
	return &LibpodGetArchiveInternalServerError{}
}

/*LibpodGetArchiveInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodGetArchiveInternalServerError struct {
	Payload *LibpodGetArchiveInternalServerErrorBody
}

func (o *LibpodGetArchiveInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/copy][%d] libpodGetArchiveInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodGetArchiveInternalServerError) GetPayload() *LibpodGetArchiveInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodGetArchiveInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodGetArchiveInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodGetArchiveBadRequestBody libpod get archive bad request body
swagger:model LibpodGetArchiveBadRequestBody
*/
type LibpodGetArchiveBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod get archive bad request body
func (o *LibpodGetArchiveBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod get archive bad request body based on context it is used
func (o *LibpodGetArchiveBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodGetArchiveBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodGetArchiveBadRequestBody) UnmarshalBinary(b []byte) error {
	var res LibpodGetArchiveBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodGetArchiveInternalServerErrorBody libpod get archive internal server error body
swagger:model LibpodGetArchiveInternalServerErrorBody
*/
type LibpodGetArchiveInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod get archive internal server error body
func (o *LibpodGetArchiveInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod get archive internal server error body based on context it is used
func (o *LibpodGetArchiveInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodGetArchiveInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodGetArchiveInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodGetArchiveInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodGetArchiveNotFoundBody libpod get archive not found body
swagger:model LibpodGetArchiveNotFoundBody
*/
type LibpodGetArchiveNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod get archive not found body
func (o *LibpodGetArchiveNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod get archive not found body based on context it is used
func (o *LibpodGetArchiveNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodGetArchiveNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodGetArchiveNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodGetArchiveNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
