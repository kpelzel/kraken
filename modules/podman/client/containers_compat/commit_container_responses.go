// Code generated by go-swagger; DO NOT EDIT.

package containers_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CommitContainerReader is a Reader for the CommitContainer structure.
type CommitContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CommitContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCommitContainerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewCommitContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCommitContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCommitContainerCreated creates a CommitContainerCreated with default headers values
func NewCommitContainerCreated() *CommitContainerCreated {
	return &CommitContainerCreated{}
}

/*CommitContainerCreated handles this case with default header values.

no error
*/
type CommitContainerCreated struct {
}

func (o *CommitContainerCreated) Error() string {
	return fmt.Sprintf("[POST /commit][%d] commitContainerCreated ", 201)
}

func (o *CommitContainerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCommitContainerNotFound creates a CommitContainerNotFound with default headers values
func NewCommitContainerNotFound() *CommitContainerNotFound {
	return &CommitContainerNotFound{}
}

/*CommitContainerNotFound handles this case with default header values.

No such image
*/
type CommitContainerNotFound struct {
	Payload *CommitContainerNotFoundBody
}

func (o *CommitContainerNotFound) Error() string {
	return fmt.Sprintf("[POST /commit][%d] commitContainerNotFound  %+v", 404, o.Payload)
}

func (o *CommitContainerNotFound) GetPayload() *CommitContainerNotFoundBody {
	return o.Payload
}

func (o *CommitContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CommitContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCommitContainerInternalServerError creates a CommitContainerInternalServerError with default headers values
func NewCommitContainerInternalServerError() *CommitContainerInternalServerError {
	return &CommitContainerInternalServerError{}
}

/*CommitContainerInternalServerError handles this case with default header values.

Internal server error
*/
type CommitContainerInternalServerError struct {
	Payload *CommitContainerInternalServerErrorBody
}

func (o *CommitContainerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /commit][%d] commitContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *CommitContainerInternalServerError) GetPayload() *CommitContainerInternalServerErrorBody {
	return o.Payload
}

func (o *CommitContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CommitContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CommitContainerInternalServerErrorBody commit container internal server error body
swagger:model CommitContainerInternalServerErrorBody
*/
type CommitContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this commit container internal server error body
func (o *CommitContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this commit container internal server error body based on context it is used
func (o *CommitContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CommitContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CommitContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CommitContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CommitContainerNotFoundBody commit container not found body
swagger:model CommitContainerNotFoundBody
*/
type CommitContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this commit container not found body
func (o *CommitContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this commit container not found body based on context it is used
func (o *CommitContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CommitContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CommitContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res CommitContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
