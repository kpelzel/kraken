// Code generated by go-swagger; DO NOT EDIT.

package containers_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LogsFromContainerReader is a Reader for the LogsFromContainer structure.
type LogsFromContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogsFromContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogsFromContainerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewLogsFromContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLogsFromContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLogsFromContainerOK creates a LogsFromContainerOK with default headers values
func NewLogsFromContainerOK() *LogsFromContainerOK {
	return &LogsFromContainerOK{}
}

/*LogsFromContainerOK handles this case with default header values.

logs returned as a stream in response body.
*/
type LogsFromContainerOK struct {
}

func (o *LogsFromContainerOK) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/logs][%d] logsFromContainerOK ", 200)
}

func (o *LogsFromContainerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogsFromContainerNotFound creates a LogsFromContainerNotFound with default headers values
func NewLogsFromContainerNotFound() *LogsFromContainerNotFound {
	return &LogsFromContainerNotFound{}
}

/*LogsFromContainerNotFound handles this case with default header values.

No such container
*/
type LogsFromContainerNotFound struct {
	Payload *LogsFromContainerNotFoundBody
}

func (o *LogsFromContainerNotFound) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/logs][%d] logsFromContainerNotFound  %+v", 404, o.Payload)
}

func (o *LogsFromContainerNotFound) GetPayload() *LogsFromContainerNotFoundBody {
	return o.Payload
}

func (o *LogsFromContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LogsFromContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsFromContainerInternalServerError creates a LogsFromContainerInternalServerError with default headers values
func NewLogsFromContainerInternalServerError() *LogsFromContainerInternalServerError {
	return &LogsFromContainerInternalServerError{}
}

/*LogsFromContainerInternalServerError handles this case with default header values.

Internal server error
*/
type LogsFromContainerInternalServerError struct {
	Payload *LogsFromContainerInternalServerErrorBody
}

func (o *LogsFromContainerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /containers/{name}/logs][%d] logsFromContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *LogsFromContainerInternalServerError) GetPayload() *LogsFromContainerInternalServerErrorBody {
	return o.Payload
}

func (o *LogsFromContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LogsFromContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LogsFromContainerInternalServerErrorBody logs from container internal server error body
swagger:model LogsFromContainerInternalServerErrorBody
*/
type LogsFromContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this logs from container internal server error body
func (o *LogsFromContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this logs from container internal server error body based on context it is used
func (o *LogsFromContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LogsFromContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LogsFromContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LogsFromContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LogsFromContainerNotFoundBody logs from container not found body
swagger:model LogsFromContainerNotFoundBody
*/
type LogsFromContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this logs from container not found body
func (o *LogsFromContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this logs from container not found body based on context it is used
func (o *LogsFromContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LogsFromContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LogsFromContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LogsFromContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
