// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/hpc/kraken/modules/podman/models"
)

// LibpodPlayKubeReader is a Reader for the LibpodPlayKube structure.
type LibpodPlayKubeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodPlayKubeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLibpodPlayKubeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewLibpodPlayKubeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodPlayKubeOK creates a LibpodPlayKubeOK with default headers values
func NewLibpodPlayKubeOK() *LibpodPlayKubeOK {
	return &LibpodPlayKubeOK{}
}

/*LibpodPlayKubeOK handles this case with default header values.

PlayKube response
*/
type LibpodPlayKubeOK struct {
	Payload *models.PlayKubeReport
}

func (o *LibpodPlayKubeOK) Error() string {
	return fmt.Sprintf("[POST /libpod/play/kube][%d] libpodPlayKubeOK  %+v", 200, o.Payload)
}

func (o *LibpodPlayKubeOK) GetPayload() *models.PlayKubeReport {
	return o.Payload
}

func (o *LibpodPlayKubeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlayKubeReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodPlayKubeInternalServerError creates a LibpodPlayKubeInternalServerError with default headers values
func NewLibpodPlayKubeInternalServerError() *LibpodPlayKubeInternalServerError {
	return &LibpodPlayKubeInternalServerError{}
}

/*LibpodPlayKubeInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodPlayKubeInternalServerError struct {
	Payload *LibpodPlayKubeInternalServerErrorBody
}

func (o *LibpodPlayKubeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/play/kube][%d] libpodPlayKubeInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodPlayKubeInternalServerError) GetPayload() *LibpodPlayKubeInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodPlayKubeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodPlayKubeInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodPlayKubeInternalServerErrorBody libpod play kube internal server error body
swagger:model LibpodPlayKubeInternalServerErrorBody
*/
type LibpodPlayKubeInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod play kube internal server error body
func (o *LibpodPlayKubeInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod play kube internal server error body based on context it is used
func (o *LibpodPlayKubeInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodPlayKubeInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodPlayKubeInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodPlayKubeInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
