// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodPutArchiveReader is a Reader for the LibpodPutArchive structure.
type LibpodPutArchiveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodPutArchiveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLibpodPutArchiveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLibpodPutArchiveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLibpodPutArchiveForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLibpodPutArchiveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodPutArchiveInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodPutArchiveOK creates a LibpodPutArchiveOK with default headers values
func NewLibpodPutArchiveOK() *LibpodPutArchiveOK {
	return &LibpodPutArchiveOK{}
}

/*LibpodPutArchiveOK handles this case with default header values.

no error
*/
type LibpodPutArchiveOK struct {
}

func (o *LibpodPutArchiveOK) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/copy][%d] libpodPutArchiveOK ", 200)
}

func (o *LibpodPutArchiveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodPutArchiveBadRequest creates a LibpodPutArchiveBadRequest with default headers values
func NewLibpodPutArchiveBadRequest() *LibpodPutArchiveBadRequest {
	return &LibpodPutArchiveBadRequest{}
}

/*LibpodPutArchiveBadRequest handles this case with default header values.

Bad parameter in request
*/
type LibpodPutArchiveBadRequest struct {
	Payload *LibpodPutArchiveBadRequestBody
}

func (o *LibpodPutArchiveBadRequest) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/copy][%d] libpodPutArchiveBadRequest  %+v", 400, o.Payload)
}

func (o *LibpodPutArchiveBadRequest) GetPayload() *LibpodPutArchiveBadRequestBody {
	return o.Payload
}

func (o *LibpodPutArchiveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodPutArchiveBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodPutArchiveForbidden creates a LibpodPutArchiveForbidden with default headers values
func NewLibpodPutArchiveForbidden() *LibpodPutArchiveForbidden {
	return &LibpodPutArchiveForbidden{}
}

/*LibpodPutArchiveForbidden handles this case with default header values.

the container rootfs is read-only
*/
type LibpodPutArchiveForbidden struct {
}

func (o *LibpodPutArchiveForbidden) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/copy][%d] libpodPutArchiveForbidden ", 403)
}

func (o *LibpodPutArchiveForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodPutArchiveNotFound creates a LibpodPutArchiveNotFound with default headers values
func NewLibpodPutArchiveNotFound() *LibpodPutArchiveNotFound {
	return &LibpodPutArchiveNotFound{}
}

/*LibpodPutArchiveNotFound handles this case with default header values.

No such container
*/
type LibpodPutArchiveNotFound struct {
	Payload *LibpodPutArchiveNotFoundBody
}

func (o *LibpodPutArchiveNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/copy][%d] libpodPutArchiveNotFound  %+v", 404, o.Payload)
}

func (o *LibpodPutArchiveNotFound) GetPayload() *LibpodPutArchiveNotFoundBody {
	return o.Payload
}

func (o *LibpodPutArchiveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodPutArchiveNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodPutArchiveInternalServerError creates a LibpodPutArchiveInternalServerError with default headers values
func NewLibpodPutArchiveInternalServerError() *LibpodPutArchiveInternalServerError {
	return &LibpodPutArchiveInternalServerError{}
}

/*LibpodPutArchiveInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodPutArchiveInternalServerError struct {
	Payload *LibpodPutArchiveInternalServerErrorBody
}

func (o *LibpodPutArchiveInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/copy][%d] libpodPutArchiveInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodPutArchiveInternalServerError) GetPayload() *LibpodPutArchiveInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodPutArchiveInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodPutArchiveInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodPutArchiveBadRequestBody libpod put archive bad request body
swagger:model LibpodPutArchiveBadRequestBody
*/
type LibpodPutArchiveBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod put archive bad request body
func (o *LibpodPutArchiveBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod put archive bad request body based on context it is used
func (o *LibpodPutArchiveBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodPutArchiveBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodPutArchiveBadRequestBody) UnmarshalBinary(b []byte) error {
	var res LibpodPutArchiveBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodPutArchiveInternalServerErrorBody libpod put archive internal server error body
swagger:model LibpodPutArchiveInternalServerErrorBody
*/
type LibpodPutArchiveInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod put archive internal server error body
func (o *LibpodPutArchiveInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod put archive internal server error body based on context it is used
func (o *LibpodPutArchiveInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodPutArchiveInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodPutArchiveInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodPutArchiveInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodPutArchiveNotFoundBody libpod put archive not found body
swagger:model LibpodPutArchiveNotFoundBody
*/
type LibpodPutArchiveNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod put archive not found body
func (o *LibpodPutArchiveNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod put archive not found body based on context it is used
func (o *LibpodPutArchiveNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodPutArchiveNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodPutArchiveNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodPutArchiveNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
