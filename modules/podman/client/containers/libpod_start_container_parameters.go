// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewLibpodStartContainerParams creates a new LibpodStartContainerParams object
// with the default values initialized.
func NewLibpodStartContainerParams() *LibpodStartContainerParams {
	var (
		detachKeysDefault = string("ctrl-p,ctrl-q")
	)
	return &LibpodStartContainerParams{
		DetachKeys: &detachKeysDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewLibpodStartContainerParamsWithTimeout creates a new LibpodStartContainerParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewLibpodStartContainerParamsWithTimeout(timeout time.Duration) *LibpodStartContainerParams {
	var (
		detachKeysDefault = string("ctrl-p,ctrl-q")
	)
	return &LibpodStartContainerParams{
		DetachKeys: &detachKeysDefault,

		timeout: timeout,
	}
}

// NewLibpodStartContainerParamsWithContext creates a new LibpodStartContainerParams object
// with the default values initialized, and the ability to set a context for a request
func NewLibpodStartContainerParamsWithContext(ctx context.Context) *LibpodStartContainerParams {
	var (
		detachKeysDefault = string("ctrl-p,ctrl-q")
	)
	return &LibpodStartContainerParams{
		DetachKeys: &detachKeysDefault,

		Context: ctx,
	}
}

// NewLibpodStartContainerParamsWithHTTPClient creates a new LibpodStartContainerParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewLibpodStartContainerParamsWithHTTPClient(client *http.Client) *LibpodStartContainerParams {
	var (
		detachKeysDefault = string("ctrl-p,ctrl-q")
	)
	return &LibpodStartContainerParams{
		DetachKeys: &detachKeysDefault,
		HTTPClient: client,
	}
}

/*LibpodStartContainerParams contains all the parameters to send to the API endpoint
for the libpod start container operation typically these are written to a http.Request
*/
type LibpodStartContainerParams struct {

	/*DetachKeys
	  Override the key sequence for detaching a container. Format is a single character [a-Z] or ctrl-<value> where <value> is one of: a-z, @, ^, [, , or _.

	*/
	DetachKeys *string
	/*Name
	  the name or ID of the container

	*/
	Name string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the libpod start container params
func (o *LibpodStartContainerParams) WithTimeout(timeout time.Duration) *LibpodStartContainerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the libpod start container params
func (o *LibpodStartContainerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the libpod start container params
func (o *LibpodStartContainerParams) WithContext(ctx context.Context) *LibpodStartContainerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the libpod start container params
func (o *LibpodStartContainerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the libpod start container params
func (o *LibpodStartContainerParams) WithHTTPClient(client *http.Client) *LibpodStartContainerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the libpod start container params
func (o *LibpodStartContainerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDetachKeys adds the detachKeys to the libpod start container params
func (o *LibpodStartContainerParams) WithDetachKeys(detachKeys *string) *LibpodStartContainerParams {
	o.SetDetachKeys(detachKeys)
	return o
}

// SetDetachKeys adds the detachKeys to the libpod start container params
func (o *LibpodStartContainerParams) SetDetachKeys(detachKeys *string) {
	o.DetachKeys = detachKeys
}

// WithName adds the name to the libpod start container params
func (o *LibpodStartContainerParams) WithName(name string) *LibpodStartContainerParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the libpod start container params
func (o *LibpodStartContainerParams) SetName(name string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *LibpodStartContainerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DetachKeys != nil {

		// query param detachKeys
		var qrDetachKeys string
		if o.DetachKeys != nil {
			qrDetachKeys = *o.DetachKeys
		}
		qDetachKeys := qrDetachKeys
		if qDetachKeys != "" {
			if err := r.SetQueryParam("detachKeys", qDetachKeys); err != nil {
				return err
			}
		}

	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
