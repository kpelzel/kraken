// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodMountContainerReader is a Reader for the LibpodMountContainer structure.
type LibpodMountContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodMountContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLibpodMountContainerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewLibpodMountContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodMountContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodMountContainerOK creates a LibpodMountContainerOK with default headers values
func NewLibpodMountContainerOK() *LibpodMountContainerOK {
	return &LibpodMountContainerOK{}
}

/*LibpodMountContainerOK handles this case with default header values.

mounted container
*/
type LibpodMountContainerOK struct {
	Payload string
}

func (o *LibpodMountContainerOK) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/mount][%d] libpodMountContainerOK  %+v", 200, o.Payload)
}

func (o *LibpodMountContainerOK) GetPayload() string {
	return o.Payload
}

func (o *LibpodMountContainerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodMountContainerNotFound creates a LibpodMountContainerNotFound with default headers values
func NewLibpodMountContainerNotFound() *LibpodMountContainerNotFound {
	return &LibpodMountContainerNotFound{}
}

/*LibpodMountContainerNotFound handles this case with default header values.

No such container
*/
type LibpodMountContainerNotFound struct {
	Payload *LibpodMountContainerNotFoundBody
}

func (o *LibpodMountContainerNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/mount][%d] libpodMountContainerNotFound  %+v", 404, o.Payload)
}

func (o *LibpodMountContainerNotFound) GetPayload() *LibpodMountContainerNotFoundBody {
	return o.Payload
}

func (o *LibpodMountContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodMountContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodMountContainerInternalServerError creates a LibpodMountContainerInternalServerError with default headers values
func NewLibpodMountContainerInternalServerError() *LibpodMountContainerInternalServerError {
	return &LibpodMountContainerInternalServerError{}
}

/*LibpodMountContainerInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodMountContainerInternalServerError struct {
	Payload *LibpodMountContainerInternalServerErrorBody
}

func (o *LibpodMountContainerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/mount][%d] libpodMountContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodMountContainerInternalServerError) GetPayload() *LibpodMountContainerInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodMountContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodMountContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodMountContainerInternalServerErrorBody libpod mount container internal server error body
swagger:model LibpodMountContainerInternalServerErrorBody
*/
type LibpodMountContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod mount container internal server error body
func (o *LibpodMountContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod mount container internal server error body based on context it is used
func (o *LibpodMountContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodMountContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodMountContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodMountContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodMountContainerNotFoundBody libpod mount container not found body
swagger:model LibpodMountContainerNotFoundBody
*/
type LibpodMountContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod mount container not found body
func (o *LibpodMountContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod mount container not found body based on context it is used
func (o *LibpodMountContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodMountContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodMountContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodMountContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
