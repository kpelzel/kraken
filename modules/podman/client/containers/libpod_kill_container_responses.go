// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodKillContainerReader is a Reader for the LibpodKillContainer structure.
type LibpodKillContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodKillContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewLibpodKillContainerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewLibpodKillContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewLibpodKillContainerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodKillContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodKillContainerNoContent creates a LibpodKillContainerNoContent with default headers values
func NewLibpodKillContainerNoContent() *LibpodKillContainerNoContent {
	return &LibpodKillContainerNoContent{}
}

/*LibpodKillContainerNoContent handles this case with default header values.

no error
*/
type LibpodKillContainerNoContent struct {
}

func (o *LibpodKillContainerNoContent) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/kill][%d] libpodKillContainerNoContent ", 204)
}

func (o *LibpodKillContainerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodKillContainerNotFound creates a LibpodKillContainerNotFound with default headers values
func NewLibpodKillContainerNotFound() *LibpodKillContainerNotFound {
	return &LibpodKillContainerNotFound{}
}

/*LibpodKillContainerNotFound handles this case with default header values.

No such container
*/
type LibpodKillContainerNotFound struct {
	Payload *LibpodKillContainerNotFoundBody
}

func (o *LibpodKillContainerNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/kill][%d] libpodKillContainerNotFound  %+v", 404, o.Payload)
}

func (o *LibpodKillContainerNotFound) GetPayload() *LibpodKillContainerNotFoundBody {
	return o.Payload
}

func (o *LibpodKillContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodKillContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodKillContainerConflict creates a LibpodKillContainerConflict with default headers values
func NewLibpodKillContainerConflict() *LibpodKillContainerConflict {
	return &LibpodKillContainerConflict{}
}

/*LibpodKillContainerConflict handles this case with default header values.

Conflict error in operation
*/
type LibpodKillContainerConflict struct {
	Payload *LibpodKillContainerConflictBody
}

func (o *LibpodKillContainerConflict) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/kill][%d] libpodKillContainerConflict  %+v", 409, o.Payload)
}

func (o *LibpodKillContainerConflict) GetPayload() *LibpodKillContainerConflictBody {
	return o.Payload
}

func (o *LibpodKillContainerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodKillContainerConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodKillContainerInternalServerError creates a LibpodKillContainerInternalServerError with default headers values
func NewLibpodKillContainerInternalServerError() *LibpodKillContainerInternalServerError {
	return &LibpodKillContainerInternalServerError{}
}

/*LibpodKillContainerInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodKillContainerInternalServerError struct {
	Payload *LibpodKillContainerInternalServerErrorBody
}

func (o *LibpodKillContainerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/{name}/kill][%d] libpodKillContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodKillContainerInternalServerError) GetPayload() *LibpodKillContainerInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodKillContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodKillContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodKillContainerConflictBody libpod kill container conflict body
swagger:model LibpodKillContainerConflictBody
*/
type LibpodKillContainerConflictBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod kill container conflict body
func (o *LibpodKillContainerConflictBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod kill container conflict body based on context it is used
func (o *LibpodKillContainerConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodKillContainerConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodKillContainerConflictBody) UnmarshalBinary(b []byte) error {
	var res LibpodKillContainerConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodKillContainerInternalServerErrorBody libpod kill container internal server error body
swagger:model LibpodKillContainerInternalServerErrorBody
*/
type LibpodKillContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod kill container internal server error body
func (o *LibpodKillContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod kill container internal server error body based on context it is used
func (o *LibpodKillContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodKillContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodKillContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodKillContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodKillContainerNotFoundBody libpod kill container not found body
swagger:model LibpodKillContainerNotFoundBody
*/
type LibpodKillContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod kill container not found body
func (o *LibpodKillContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod kill container not found body based on context it is used
func (o *LibpodKillContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodKillContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodKillContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodKillContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
