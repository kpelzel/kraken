// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLibpodRestoreContainerParams creates a new LibpodRestoreContainerParams object
// with the default values initialized.
func NewLibpodRestoreContainerParams() *LibpodRestoreContainerParams {
	var ()
	return &LibpodRestoreContainerParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewLibpodRestoreContainerParamsWithTimeout creates a new LibpodRestoreContainerParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewLibpodRestoreContainerParamsWithTimeout(timeout time.Duration) *LibpodRestoreContainerParams {
	var ()
	return &LibpodRestoreContainerParams{

		timeout: timeout,
	}
}

// NewLibpodRestoreContainerParamsWithContext creates a new LibpodRestoreContainerParams object
// with the default values initialized, and the ability to set a context for a request
func NewLibpodRestoreContainerParamsWithContext(ctx context.Context) *LibpodRestoreContainerParams {
	var ()
	return &LibpodRestoreContainerParams{

		Context: ctx,
	}
}

// NewLibpodRestoreContainerParamsWithHTTPClient creates a new LibpodRestoreContainerParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewLibpodRestoreContainerParamsWithHTTPClient(client *http.Client) *LibpodRestoreContainerParams {
	var ()
	return &LibpodRestoreContainerParams{
		HTTPClient: client,
	}
}

/*LibpodRestoreContainerParams contains all the parameters to send to the API endpoint
for the libpod restore container operation typically these are written to a http.Request
*/
type LibpodRestoreContainerParams struct {

	/*IgnoreRootFS
	  do not include root file-system changes when exporting

	*/
	IgnoreRootFS *bool
	/*IgnoreStaticIP
	  ignore IP address if set statically

	*/
	IgnoreStaticIP *bool
	/*IgnoreStaticMAC
	  ignore MAC address if set statically

	*/
	IgnoreStaticMAC *bool
	/*Import
	  import the restore from a checkpoint tar.gz

	*/
	Import *bool
	/*Keep
	  keep all temporary checkpoint files

	*/
	Keep *bool
	/*LeaveRunning
	  leave the container running after writing checkpoint to disk

	*/
	LeaveRunning *bool
	/*Name
	  the name or id of the container

	*/
	PathName string
	/*Name
	  the name of the container when restored from a tar. can only be used with import

	*/
	QueryName *string
	/*TCPEstablished
	  checkpoint a container with established TCP connections

	*/
	TCPEstablished *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithTimeout(timeout time.Duration) *LibpodRestoreContainerParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithContext(ctx context.Context) *LibpodRestoreContainerParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithHTTPClient(client *http.Client) *LibpodRestoreContainerParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIgnoreRootFS adds the ignoreRootFS to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithIgnoreRootFS(ignoreRootFS *bool) *LibpodRestoreContainerParams {
	o.SetIgnoreRootFS(ignoreRootFS)
	return o
}

// SetIgnoreRootFS adds the ignoreRootFS to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetIgnoreRootFS(ignoreRootFS *bool) {
	o.IgnoreRootFS = ignoreRootFS
}

// WithIgnoreStaticIP adds the ignoreStaticIP to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithIgnoreStaticIP(ignoreStaticIP *bool) *LibpodRestoreContainerParams {
	o.SetIgnoreStaticIP(ignoreStaticIP)
	return o
}

// SetIgnoreStaticIP adds the ignoreStaticIp to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetIgnoreStaticIP(ignoreStaticIP *bool) {
	o.IgnoreStaticIP = ignoreStaticIP
}

// WithIgnoreStaticMAC adds the ignoreStaticMAC to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithIgnoreStaticMAC(ignoreStaticMAC *bool) *LibpodRestoreContainerParams {
	o.SetIgnoreStaticMAC(ignoreStaticMAC)
	return o
}

// SetIgnoreStaticMAC adds the ignoreStaticMAC to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetIgnoreStaticMAC(ignoreStaticMAC *bool) {
	o.IgnoreStaticMAC = ignoreStaticMAC
}

// WithImport adds the importVar to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithImport(importVar *bool) *LibpodRestoreContainerParams {
	o.SetImport(importVar)
	return o
}

// SetImport adds the import to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetImport(importVar *bool) {
	o.Import = importVar
}

// WithKeep adds the keep to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithKeep(keep *bool) *LibpodRestoreContainerParams {
	o.SetKeep(keep)
	return o
}

// SetKeep adds the keep to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetKeep(keep *bool) {
	o.Keep = keep
}

// WithLeaveRunning adds the leaveRunning to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithLeaveRunning(leaveRunning *bool) *LibpodRestoreContainerParams {
	o.SetLeaveRunning(leaveRunning)
	return o
}

// SetLeaveRunning adds the leaveRunning to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetLeaveRunning(leaveRunning *bool) {
	o.LeaveRunning = leaveRunning
}

// WithPathName adds the name to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithPathName(name string) *LibpodRestoreContainerParams {
	o.SetPathName(name)
	return o
}

// SetPathName adds the name to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetPathName(name string) {
	o.PathName = name
}

// WithQueryName adds the name to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithQueryName(name *string) *LibpodRestoreContainerParams {
	o.SetQueryName(name)
	return o
}

// SetQueryName adds the name to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetQueryName(name *string) {
	o.QueryName = name
}

// WithTCPEstablished adds the tCPEstablished to the libpod restore container params
func (o *LibpodRestoreContainerParams) WithTCPEstablished(tCPEstablished *bool) *LibpodRestoreContainerParams {
	o.SetTCPEstablished(tCPEstablished)
	return o
}

// SetTCPEstablished adds the tcpEstablished to the libpod restore container params
func (o *LibpodRestoreContainerParams) SetTCPEstablished(tCPEstablished *bool) {
	o.TCPEstablished = tCPEstablished
}

// WriteToRequest writes these params to a swagger request
func (o *LibpodRestoreContainerParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IgnoreRootFS != nil {

		// query param ignoreRootFS
		var qrIgnoreRootFS bool
		if o.IgnoreRootFS != nil {
			qrIgnoreRootFS = *o.IgnoreRootFS
		}
		qIgnoreRootFS := swag.FormatBool(qrIgnoreRootFS)
		if qIgnoreRootFS != "" {
			if err := r.SetQueryParam("ignoreRootFS", qIgnoreRootFS); err != nil {
				return err
			}
		}

	}

	if o.IgnoreStaticIP != nil {

		// query param ignoreStaticIP
		var qrIgnoreStaticIP bool
		if o.IgnoreStaticIP != nil {
			qrIgnoreStaticIP = *o.IgnoreStaticIP
		}
		qIgnoreStaticIP := swag.FormatBool(qrIgnoreStaticIP)
		if qIgnoreStaticIP != "" {
			if err := r.SetQueryParam("ignoreStaticIP", qIgnoreStaticIP); err != nil {
				return err
			}
		}

	}

	if o.IgnoreStaticMAC != nil {

		// query param ignoreStaticMAC
		var qrIgnoreStaticMAC bool
		if o.IgnoreStaticMAC != nil {
			qrIgnoreStaticMAC = *o.IgnoreStaticMAC
		}
		qIgnoreStaticMAC := swag.FormatBool(qrIgnoreStaticMAC)
		if qIgnoreStaticMAC != "" {
			if err := r.SetQueryParam("ignoreStaticMAC", qIgnoreStaticMAC); err != nil {
				return err
			}
		}

	}

	if o.Import != nil {

		// query param import
		var qrImport bool
		if o.Import != nil {
			qrImport = *o.Import
		}
		qImport := swag.FormatBool(qrImport)
		if qImport != "" {
			if err := r.SetQueryParam("import", qImport); err != nil {
				return err
			}
		}

	}

	if o.Keep != nil {

		// query param keep
		var qrKeep bool
		if o.Keep != nil {
			qrKeep = *o.Keep
		}
		qKeep := swag.FormatBool(qrKeep)
		if qKeep != "" {
			if err := r.SetQueryParam("keep", qKeep); err != nil {
				return err
			}
		}

	}

	if o.LeaveRunning != nil {

		// query param leaveRunning
		var qrLeaveRunning bool
		if o.LeaveRunning != nil {
			qrLeaveRunning = *o.LeaveRunning
		}
		qLeaveRunning := swag.FormatBool(qrLeaveRunning)
		if qLeaveRunning != "" {
			if err := r.SetQueryParam("leaveRunning", qLeaveRunning); err != nil {
				return err
			}
		}

	}

	// path param name
	if err := r.SetPathParam("name", o.PathName); err != nil {
		return err
	}

	if o.QueryName != nil {

		// query param name
		var qrName string
		if o.QueryName != nil {
			qrName = *o.QueryName
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.TCPEstablished != nil {

		// query param tcpEstablished
		var qrTCPEstablished bool
		if o.TCPEstablished != nil {
			qrTCPEstablished = *o.TCPEstablished
		}
		qTCPEstablished := swag.FormatBool(qrTCPEstablished)
		if qTCPEstablished != "" {
			if err := r.SetQueryParam("tcpEstablished", qTCPEstablished); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
