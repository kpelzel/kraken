// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewLibpodStatsContainersParams creates a new LibpodStatsContainersParams object
// with the default values initialized.
func NewLibpodStatsContainersParams() *LibpodStatsContainersParams {
	var (
		streamDefault = bool(true)
	)
	return &LibpodStatsContainersParams{
		Stream: &streamDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewLibpodStatsContainersParamsWithTimeout creates a new LibpodStatsContainersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewLibpodStatsContainersParamsWithTimeout(timeout time.Duration) *LibpodStatsContainersParams {
	var (
		streamDefault = bool(true)
	)
	return &LibpodStatsContainersParams{
		Stream: &streamDefault,

		timeout: timeout,
	}
}

// NewLibpodStatsContainersParamsWithContext creates a new LibpodStatsContainersParams object
// with the default values initialized, and the ability to set a context for a request
func NewLibpodStatsContainersParamsWithContext(ctx context.Context) *LibpodStatsContainersParams {
	var (
		streamDefault = bool(true)
	)
	return &LibpodStatsContainersParams{
		Stream: &streamDefault,

		Context: ctx,
	}
}

// NewLibpodStatsContainersParamsWithHTTPClient creates a new LibpodStatsContainersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewLibpodStatsContainersParamsWithHTTPClient(client *http.Client) *LibpodStatsContainersParams {
	var (
		streamDefault = bool(true)
	)
	return &LibpodStatsContainersParams{
		Stream:     &streamDefault,
		HTTPClient: client,
	}
}

/*LibpodStatsContainersParams contains all the parameters to send to the API endpoint
for the libpod stats containers operation typically these are written to a http.Request
*/
type LibpodStatsContainersParams struct {

	/*Containers
	  names or IDs of containers

	*/
	Containers []string
	/*Stream
	  Stream the output

	*/
	Stream *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the libpod stats containers params
func (o *LibpodStatsContainersParams) WithTimeout(timeout time.Duration) *LibpodStatsContainersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the libpod stats containers params
func (o *LibpodStatsContainersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the libpod stats containers params
func (o *LibpodStatsContainersParams) WithContext(ctx context.Context) *LibpodStatsContainersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the libpod stats containers params
func (o *LibpodStatsContainersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the libpod stats containers params
func (o *LibpodStatsContainersParams) WithHTTPClient(client *http.Client) *LibpodStatsContainersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the libpod stats containers params
func (o *LibpodStatsContainersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContainers adds the containers to the libpod stats containers params
func (o *LibpodStatsContainersParams) WithContainers(containers []string) *LibpodStatsContainersParams {
	o.SetContainers(containers)
	return o
}

// SetContainers adds the containers to the libpod stats containers params
func (o *LibpodStatsContainersParams) SetContainers(containers []string) {
	o.Containers = containers
}

// WithStream adds the stream to the libpod stats containers params
func (o *LibpodStatsContainersParams) WithStream(stream *bool) *LibpodStatsContainersParams {
	o.SetStream(stream)
	return o
}

// SetStream adds the stream to the libpod stats containers params
func (o *LibpodStatsContainersParams) SetStream(stream *bool) {
	o.Stream = stream
}

// WriteToRequest writes these params to a swagger request
func (o *LibpodStatsContainersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesContainers := o.Containers

	joinedContainers := swag.JoinByFormat(valuesContainers, "")
	// query array param containers
	if err := r.SetQueryParam("containers", joinedContainers...); err != nil {
		return err
	}

	if o.Stream != nil {

		// query param stream
		var qrStream bool
		if o.Stream != nil {
			qrStream = *o.Stream
		}
		qStream := swag.FormatBool(qrStream)
		if qStream != "" {
			if err := r.SetQueryParam("stream", qStream); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
