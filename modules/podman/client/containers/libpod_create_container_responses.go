// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodCreateContainerReader is a Reader for the LibpodCreateContainer structure.
type LibpodCreateContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodCreateContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewLibpodCreateContainerCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLibpodCreateContainerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLibpodCreateContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewLibpodCreateContainerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodCreateContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodCreateContainerCreated creates a LibpodCreateContainerCreated with default headers values
func NewLibpodCreateContainerCreated() *LibpodCreateContainerCreated {
	return &LibpodCreateContainerCreated{}
}

/*LibpodCreateContainerCreated handles this case with default header values.

Create container
*/
type LibpodCreateContainerCreated struct {
	Payload *LibpodCreateContainerCreatedBody
}

func (o *LibpodCreateContainerCreated) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/create][%d] libpodCreateContainerCreated  %+v", 201, o.Payload)
}

func (o *LibpodCreateContainerCreated) GetPayload() *LibpodCreateContainerCreatedBody {
	return o.Payload
}

func (o *LibpodCreateContainerCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodCreateContainerCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodCreateContainerBadRequest creates a LibpodCreateContainerBadRequest with default headers values
func NewLibpodCreateContainerBadRequest() *LibpodCreateContainerBadRequest {
	return &LibpodCreateContainerBadRequest{}
}

/*LibpodCreateContainerBadRequest handles this case with default header values.

Bad parameter in request
*/
type LibpodCreateContainerBadRequest struct {
	Payload *LibpodCreateContainerBadRequestBody
}

func (o *LibpodCreateContainerBadRequest) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/create][%d] libpodCreateContainerBadRequest  %+v", 400, o.Payload)
}

func (o *LibpodCreateContainerBadRequest) GetPayload() *LibpodCreateContainerBadRequestBody {
	return o.Payload
}

func (o *LibpodCreateContainerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodCreateContainerBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodCreateContainerNotFound creates a LibpodCreateContainerNotFound with default headers values
func NewLibpodCreateContainerNotFound() *LibpodCreateContainerNotFound {
	return &LibpodCreateContainerNotFound{}
}

/*LibpodCreateContainerNotFound handles this case with default header values.

No such container
*/
type LibpodCreateContainerNotFound struct {
	Payload *LibpodCreateContainerNotFoundBody
}

func (o *LibpodCreateContainerNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/create][%d] libpodCreateContainerNotFound  %+v", 404, o.Payload)
}

func (o *LibpodCreateContainerNotFound) GetPayload() *LibpodCreateContainerNotFoundBody {
	return o.Payload
}

func (o *LibpodCreateContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodCreateContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodCreateContainerConflict creates a LibpodCreateContainerConflict with default headers values
func NewLibpodCreateContainerConflict() *LibpodCreateContainerConflict {
	return &LibpodCreateContainerConflict{}
}

/*LibpodCreateContainerConflict handles this case with default header values.

Conflict error in operation
*/
type LibpodCreateContainerConflict struct {
	Payload *LibpodCreateContainerConflictBody
}

func (o *LibpodCreateContainerConflict) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/create][%d] libpodCreateContainerConflict  %+v", 409, o.Payload)
}

func (o *LibpodCreateContainerConflict) GetPayload() *LibpodCreateContainerConflictBody {
	return o.Payload
}

func (o *LibpodCreateContainerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodCreateContainerConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodCreateContainerInternalServerError creates a LibpodCreateContainerInternalServerError with default headers values
func NewLibpodCreateContainerInternalServerError() *LibpodCreateContainerInternalServerError {
	return &LibpodCreateContainerInternalServerError{}
}

/*LibpodCreateContainerInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodCreateContainerInternalServerError struct {
	Payload *LibpodCreateContainerInternalServerErrorBody
}

func (o *LibpodCreateContainerInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/containers/create][%d] libpodCreateContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodCreateContainerInternalServerError) GetPayload() *LibpodCreateContainerInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodCreateContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodCreateContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodCreateContainerBadRequestBody libpod create container bad request body
swagger:model LibpodCreateContainerBadRequestBody
*/
type LibpodCreateContainerBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod create container bad request body
func (o *LibpodCreateContainerBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod create container bad request body based on context it is used
func (o *LibpodCreateContainerBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodCreateContainerBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodCreateContainerBadRequestBody) UnmarshalBinary(b []byte) error {
	var res LibpodCreateContainerBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodCreateContainerConflictBody libpod create container conflict body
swagger:model LibpodCreateContainerConflictBody
*/
type LibpodCreateContainerConflictBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod create container conflict body
func (o *LibpodCreateContainerConflictBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod create container conflict body based on context it is used
func (o *LibpodCreateContainerConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodCreateContainerConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodCreateContainerConflictBody) UnmarshalBinary(b []byte) error {
	var res LibpodCreateContainerConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodCreateContainerCreatedBody libpod create container created body
swagger:model LibpodCreateContainerCreatedBody
*/
type LibpodCreateContainerCreatedBody struct {

	// ID of the container created
	ID string `json:"Id,omitempty"`

	// Warnings during container creation
	Warnings []string `json:"Warnings"`
}

// Validate validates this libpod create container created body
func (o *LibpodCreateContainerCreatedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod create container created body based on context it is used
func (o *LibpodCreateContainerCreatedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodCreateContainerCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodCreateContainerCreatedBody) UnmarshalBinary(b []byte) error {
	var res LibpodCreateContainerCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodCreateContainerInternalServerErrorBody libpod create container internal server error body
swagger:model LibpodCreateContainerInternalServerErrorBody
*/
type LibpodCreateContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod create container internal server error body
func (o *LibpodCreateContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod create container internal server error body based on context it is used
func (o *LibpodCreateContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodCreateContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodCreateContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodCreateContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodCreateContainerNotFoundBody libpod create container not found body
swagger:model LibpodCreateContainerNotFoundBody
*/
type LibpodCreateContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod create container not found body
func (o *LibpodCreateContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod create container not found body based on context it is used
func (o *LibpodCreateContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodCreateContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodCreateContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodCreateContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
