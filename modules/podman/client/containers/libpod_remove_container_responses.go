// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodRemoveContainerReader is a Reader for the LibpodRemoveContainer structure.
type LibpodRemoveContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodRemoveContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewLibpodRemoveContainerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLibpodRemoveContainerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLibpodRemoveContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewLibpodRemoveContainerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodRemoveContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodRemoveContainerNoContent creates a LibpodRemoveContainerNoContent with default headers values
func NewLibpodRemoveContainerNoContent() *LibpodRemoveContainerNoContent {
	return &LibpodRemoveContainerNoContent{}
}

/*LibpodRemoveContainerNoContent handles this case with default header values.

no error
*/
type LibpodRemoveContainerNoContent struct {
}

func (o *LibpodRemoveContainerNoContent) Error() string {
	return fmt.Sprintf("[DELETE /libpod/containers/{name}][%d] libpodRemoveContainerNoContent ", 204)
}

func (o *LibpodRemoveContainerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodRemoveContainerBadRequest creates a LibpodRemoveContainerBadRequest with default headers values
func NewLibpodRemoveContainerBadRequest() *LibpodRemoveContainerBadRequest {
	return &LibpodRemoveContainerBadRequest{}
}

/*LibpodRemoveContainerBadRequest handles this case with default header values.

Bad parameter in request
*/
type LibpodRemoveContainerBadRequest struct {
	Payload *LibpodRemoveContainerBadRequestBody
}

func (o *LibpodRemoveContainerBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /libpod/containers/{name}][%d] libpodRemoveContainerBadRequest  %+v", 400, o.Payload)
}

func (o *LibpodRemoveContainerBadRequest) GetPayload() *LibpodRemoveContainerBadRequestBody {
	return o.Payload
}

func (o *LibpodRemoveContainerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveContainerBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodRemoveContainerNotFound creates a LibpodRemoveContainerNotFound with default headers values
func NewLibpodRemoveContainerNotFound() *LibpodRemoveContainerNotFound {
	return &LibpodRemoveContainerNotFound{}
}

/*LibpodRemoveContainerNotFound handles this case with default header values.

No such container
*/
type LibpodRemoveContainerNotFound struct {
	Payload *LibpodRemoveContainerNotFoundBody
}

func (o *LibpodRemoveContainerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /libpod/containers/{name}][%d] libpodRemoveContainerNotFound  %+v", 404, o.Payload)
}

func (o *LibpodRemoveContainerNotFound) GetPayload() *LibpodRemoveContainerNotFoundBody {
	return o.Payload
}

func (o *LibpodRemoveContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodRemoveContainerConflict creates a LibpodRemoveContainerConflict with default headers values
func NewLibpodRemoveContainerConflict() *LibpodRemoveContainerConflict {
	return &LibpodRemoveContainerConflict{}
}

/*LibpodRemoveContainerConflict handles this case with default header values.

Conflict error in operation
*/
type LibpodRemoveContainerConflict struct {
	Payload *LibpodRemoveContainerConflictBody
}

func (o *LibpodRemoveContainerConflict) Error() string {
	return fmt.Sprintf("[DELETE /libpod/containers/{name}][%d] libpodRemoveContainerConflict  %+v", 409, o.Payload)
}

func (o *LibpodRemoveContainerConflict) GetPayload() *LibpodRemoveContainerConflictBody {
	return o.Payload
}

func (o *LibpodRemoveContainerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveContainerConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodRemoveContainerInternalServerError creates a LibpodRemoveContainerInternalServerError with default headers values
func NewLibpodRemoveContainerInternalServerError() *LibpodRemoveContainerInternalServerError {
	return &LibpodRemoveContainerInternalServerError{}
}

/*LibpodRemoveContainerInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodRemoveContainerInternalServerError struct {
	Payload *LibpodRemoveContainerInternalServerErrorBody
}

func (o *LibpodRemoveContainerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /libpod/containers/{name}][%d] libpodRemoveContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodRemoveContainerInternalServerError) GetPayload() *LibpodRemoveContainerInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodRemoveContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodRemoveContainerBadRequestBody libpod remove container bad request body
swagger:model LibpodRemoveContainerBadRequestBody
*/
type LibpodRemoveContainerBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove container bad request body
func (o *LibpodRemoveContainerBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove container bad request body based on context it is used
func (o *LibpodRemoveContainerBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveContainerBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveContainerBadRequestBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveContainerBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodRemoveContainerConflictBody libpod remove container conflict body
swagger:model LibpodRemoveContainerConflictBody
*/
type LibpodRemoveContainerConflictBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove container conflict body
func (o *LibpodRemoveContainerConflictBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove container conflict body based on context it is used
func (o *LibpodRemoveContainerConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveContainerConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveContainerConflictBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveContainerConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodRemoveContainerInternalServerErrorBody libpod remove container internal server error body
swagger:model LibpodRemoveContainerInternalServerErrorBody
*/
type LibpodRemoveContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove container internal server error body
func (o *LibpodRemoveContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove container internal server error body based on context it is used
func (o *LibpodRemoveContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodRemoveContainerNotFoundBody libpod remove container not found body
swagger:model LibpodRemoveContainerNotFoundBody
*/
type LibpodRemoveContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove container not found body
func (o *LibpodRemoveContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove container not found body based on context it is used
func (o *LibpodRemoveContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
