// Code generated by go-swagger; DO NOT EDIT.

package containers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodExportContainerReader is a Reader for the LibpodExportContainer structure.
type LibpodExportContainerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodExportContainerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLibpodExportContainerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewLibpodExportContainerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodExportContainerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodExportContainerOK creates a LibpodExportContainerOK with default headers values
func NewLibpodExportContainerOK() *LibpodExportContainerOK {
	return &LibpodExportContainerOK{}
}

/*LibpodExportContainerOK handles this case with default header values.

tarball is returned in body
*/
type LibpodExportContainerOK struct {
}

func (o *LibpodExportContainerOK) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/export][%d] libpodExportContainerOK ", 200)
}

func (o *LibpodExportContainerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodExportContainerNotFound creates a LibpodExportContainerNotFound with default headers values
func NewLibpodExportContainerNotFound() *LibpodExportContainerNotFound {
	return &LibpodExportContainerNotFound{}
}

/*LibpodExportContainerNotFound handles this case with default header values.

No such container
*/
type LibpodExportContainerNotFound struct {
	Payload *LibpodExportContainerNotFoundBody
}

func (o *LibpodExportContainerNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/export][%d] libpodExportContainerNotFound  %+v", 404, o.Payload)
}

func (o *LibpodExportContainerNotFound) GetPayload() *LibpodExportContainerNotFoundBody {
	return o.Payload
}

func (o *LibpodExportContainerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodExportContainerNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodExportContainerInternalServerError creates a LibpodExportContainerInternalServerError with default headers values
func NewLibpodExportContainerInternalServerError() *LibpodExportContainerInternalServerError {
	return &LibpodExportContainerInternalServerError{}
}

/*LibpodExportContainerInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodExportContainerInternalServerError struct {
	Payload *LibpodExportContainerInternalServerErrorBody
}

func (o *LibpodExportContainerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/containers/{name}/export][%d] libpodExportContainerInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodExportContainerInternalServerError) GetPayload() *LibpodExportContainerInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodExportContainerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodExportContainerInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodExportContainerInternalServerErrorBody libpod export container internal server error body
swagger:model LibpodExportContainerInternalServerErrorBody
*/
type LibpodExportContainerInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod export container internal server error body
func (o *LibpodExportContainerInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod export container internal server error body based on context it is used
func (o *LibpodExportContainerInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodExportContainerInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodExportContainerInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodExportContainerInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodExportContainerNotFoundBody libpod export container not found body
swagger:model LibpodExportContainerNotFoundBody
*/
type LibpodExportContainerNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod export container not found body
func (o *LibpodExportContainerNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod export container not found body based on context it is used
func (o *LibpodExportContainerNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodExportContainerNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodExportContainerNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodExportContainerNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
