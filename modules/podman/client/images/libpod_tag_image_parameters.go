// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewLibpodTagImageParams creates a new LibpodTagImageParams object
// with the default values initialized.
func NewLibpodTagImageParams() *LibpodTagImageParams {
	var ()
	return &LibpodTagImageParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewLibpodTagImageParamsWithTimeout creates a new LibpodTagImageParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewLibpodTagImageParamsWithTimeout(timeout time.Duration) *LibpodTagImageParams {
	var ()
	return &LibpodTagImageParams{

		timeout: timeout,
	}
}

// NewLibpodTagImageParamsWithContext creates a new LibpodTagImageParams object
// with the default values initialized, and the ability to set a context for a request
func NewLibpodTagImageParamsWithContext(ctx context.Context) *LibpodTagImageParams {
	var ()
	return &LibpodTagImageParams{

		Context: ctx,
	}
}

// NewLibpodTagImageParamsWithHTTPClient creates a new LibpodTagImageParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewLibpodTagImageParamsWithHTTPClient(client *http.Client) *LibpodTagImageParams {
	var ()
	return &LibpodTagImageParams{
		HTTPClient: client,
	}
}

/*LibpodTagImageParams contains all the parameters to send to the API endpoint
for the libpod tag image operation typically these are written to a http.Request
*/
type LibpodTagImageParams struct {

	/*Name
	  the name or ID of the container

	*/
	Name string
	/*Repo
	  the repository to tag in

	*/
	Repo *string
	/*Tag
	  the name of the new tag

	*/
	Tag *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the libpod tag image params
func (o *LibpodTagImageParams) WithTimeout(timeout time.Duration) *LibpodTagImageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the libpod tag image params
func (o *LibpodTagImageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the libpod tag image params
func (o *LibpodTagImageParams) WithContext(ctx context.Context) *LibpodTagImageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the libpod tag image params
func (o *LibpodTagImageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the libpod tag image params
func (o *LibpodTagImageParams) WithHTTPClient(client *http.Client) *LibpodTagImageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the libpod tag image params
func (o *LibpodTagImageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the libpod tag image params
func (o *LibpodTagImageParams) WithName(name string) *LibpodTagImageParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the libpod tag image params
func (o *LibpodTagImageParams) SetName(name string) {
	o.Name = name
}

// WithRepo adds the repo to the libpod tag image params
func (o *LibpodTagImageParams) WithRepo(repo *string) *LibpodTagImageParams {
	o.SetRepo(repo)
	return o
}

// SetRepo adds the repo to the libpod tag image params
func (o *LibpodTagImageParams) SetRepo(repo *string) {
	o.Repo = repo
}

// WithTag adds the tag to the libpod tag image params
func (o *LibpodTagImageParams) WithTag(tag *string) *LibpodTagImageParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the libpod tag image params
func (o *LibpodTagImageParams) SetTag(tag *string) {
	o.Tag = tag
}

// WriteToRequest writes these params to a swagger request
func (o *LibpodTagImageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name:.*
	if err := r.SetPathParam("name:.*", o.Name); err != nil {
		return err
	}

	if o.Repo != nil {

		// query param repo
		var qrRepo string
		if o.Repo != nil {
			qrRepo = *o.Repo
		}
		qRepo := qrRepo
		if qRepo != "" {
			if err := r.SetQueryParam("repo", qRepo); err != nil {
				return err
			}
		}

	}

	if o.Tag != nil {

		// query param tag
		var qrTag string
		if o.Tag != nil {
			qrTag = *o.Tag
		}
		qTag := qrTag
		if qTag != "" {
			if err := r.SetQueryParam("tag", qTag); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
