// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodExportImagesReader is a Reader for the LibpodExportImages structure.
type LibpodExportImagesReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *LibpodExportImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLibpodExportImagesOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewLibpodExportImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodExportImagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodExportImagesOK creates a LibpodExportImagesOK with default headers values
func NewLibpodExportImagesOK(writer io.Writer) *LibpodExportImagesOK {
	return &LibpodExportImagesOK{
		Payload: writer,
	}
}

/*LibpodExportImagesOK handles this case with default header values.

no error
*/
type LibpodExportImagesOK struct {
	Payload io.Writer
}

func (o *LibpodExportImagesOK) Error() string {
	return fmt.Sprintf("[GET /libpod/images/export][%d] libpodExportImagesOK  %+v", 200, o.Payload)
}

func (o *LibpodExportImagesOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *LibpodExportImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodExportImagesNotFound creates a LibpodExportImagesNotFound with default headers values
func NewLibpodExportImagesNotFound() *LibpodExportImagesNotFound {
	return &LibpodExportImagesNotFound{}
}

/*LibpodExportImagesNotFound handles this case with default header values.

No such image
*/
type LibpodExportImagesNotFound struct {
	Payload *LibpodExportImagesNotFoundBody
}

func (o *LibpodExportImagesNotFound) Error() string {
	return fmt.Sprintf("[GET /libpod/images/export][%d] libpodExportImagesNotFound  %+v", 404, o.Payload)
}

func (o *LibpodExportImagesNotFound) GetPayload() *LibpodExportImagesNotFoundBody {
	return o.Payload
}

func (o *LibpodExportImagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodExportImagesNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodExportImagesInternalServerError creates a LibpodExportImagesInternalServerError with default headers values
func NewLibpodExportImagesInternalServerError() *LibpodExportImagesInternalServerError {
	return &LibpodExportImagesInternalServerError{}
}

/*LibpodExportImagesInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodExportImagesInternalServerError struct {
	Payload *LibpodExportImagesInternalServerErrorBody
}

func (o *LibpodExportImagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /libpod/images/export][%d] libpodExportImagesInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodExportImagesInternalServerError) GetPayload() *LibpodExportImagesInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodExportImagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodExportImagesInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodExportImagesInternalServerErrorBody libpod export images internal server error body
swagger:model LibpodExportImagesInternalServerErrorBody
*/
type LibpodExportImagesInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod export images internal server error body
func (o *LibpodExportImagesInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod export images internal server error body based on context it is used
func (o *LibpodExportImagesInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodExportImagesInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodExportImagesInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodExportImagesInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodExportImagesNotFoundBody libpod export images not found body
swagger:model LibpodExportImagesNotFoundBody
*/
type LibpodExportImagesNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod export images not found body
func (o *LibpodExportImagesNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod export images not found body based on context it is used
func (o *LibpodExportImagesNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodExportImagesNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodExportImagesNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodExportImagesNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
