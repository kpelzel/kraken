// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LibpodTagImageReader is a Reader for the LibpodTagImage structure.
type LibpodTagImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodTagImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewLibpodTagImageCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLibpodTagImageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLibpodTagImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewLibpodTagImageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodTagImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodTagImageCreated creates a LibpodTagImageCreated with default headers values
func NewLibpodTagImageCreated() *LibpodTagImageCreated {
	return &LibpodTagImageCreated{}
}

/*LibpodTagImageCreated handles this case with default header values.

no error
*/
type LibpodTagImageCreated struct {
}

func (o *LibpodTagImageCreated) Error() string {
	return fmt.Sprintf("[POST /libpod/images/{name:.*}/tag][%d] libpodTagImageCreated ", 201)
}

func (o *LibpodTagImageCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLibpodTagImageBadRequest creates a LibpodTagImageBadRequest with default headers values
func NewLibpodTagImageBadRequest() *LibpodTagImageBadRequest {
	return &LibpodTagImageBadRequest{}
}

/*LibpodTagImageBadRequest handles this case with default header values.

Bad parameter in request
*/
type LibpodTagImageBadRequest struct {
	Payload *LibpodTagImageBadRequestBody
}

func (o *LibpodTagImageBadRequest) Error() string {
	return fmt.Sprintf("[POST /libpod/images/{name:.*}/tag][%d] libpodTagImageBadRequest  %+v", 400, o.Payload)
}

func (o *LibpodTagImageBadRequest) GetPayload() *LibpodTagImageBadRequestBody {
	return o.Payload
}

func (o *LibpodTagImageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodTagImageBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodTagImageNotFound creates a LibpodTagImageNotFound with default headers values
func NewLibpodTagImageNotFound() *LibpodTagImageNotFound {
	return &LibpodTagImageNotFound{}
}

/*LibpodTagImageNotFound handles this case with default header values.

No such image
*/
type LibpodTagImageNotFound struct {
	Payload *LibpodTagImageNotFoundBody
}

func (o *LibpodTagImageNotFound) Error() string {
	return fmt.Sprintf("[POST /libpod/images/{name:.*}/tag][%d] libpodTagImageNotFound  %+v", 404, o.Payload)
}

func (o *LibpodTagImageNotFound) GetPayload() *LibpodTagImageNotFoundBody {
	return o.Payload
}

func (o *LibpodTagImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodTagImageNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodTagImageConflict creates a LibpodTagImageConflict with default headers values
func NewLibpodTagImageConflict() *LibpodTagImageConflict {
	return &LibpodTagImageConflict{}
}

/*LibpodTagImageConflict handles this case with default header values.

Conflict error in operation
*/
type LibpodTagImageConflict struct {
	Payload *LibpodTagImageConflictBody
}

func (o *LibpodTagImageConflict) Error() string {
	return fmt.Sprintf("[POST /libpod/images/{name:.*}/tag][%d] libpodTagImageConflict  %+v", 409, o.Payload)
}

func (o *LibpodTagImageConflict) GetPayload() *LibpodTagImageConflictBody {
	return o.Payload
}

func (o *LibpodTagImageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodTagImageConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodTagImageInternalServerError creates a LibpodTagImageInternalServerError with default headers values
func NewLibpodTagImageInternalServerError() *LibpodTagImageInternalServerError {
	return &LibpodTagImageInternalServerError{}
}

/*LibpodTagImageInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodTagImageInternalServerError struct {
	Payload *LibpodTagImageInternalServerErrorBody
}

func (o *LibpodTagImageInternalServerError) Error() string {
	return fmt.Sprintf("[POST /libpod/images/{name:.*}/tag][%d] libpodTagImageInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodTagImageInternalServerError) GetPayload() *LibpodTagImageInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodTagImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodTagImageInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodTagImageBadRequestBody libpod tag image bad request body
swagger:model LibpodTagImageBadRequestBody
*/
type LibpodTagImageBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod tag image bad request body
func (o *LibpodTagImageBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod tag image bad request body based on context it is used
func (o *LibpodTagImageBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodTagImageBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodTagImageBadRequestBody) UnmarshalBinary(b []byte) error {
	var res LibpodTagImageBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodTagImageConflictBody libpod tag image conflict body
swagger:model LibpodTagImageConflictBody
*/
type LibpodTagImageConflictBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod tag image conflict body
func (o *LibpodTagImageConflictBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod tag image conflict body based on context it is used
func (o *LibpodTagImageConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodTagImageConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodTagImageConflictBody) UnmarshalBinary(b []byte) error {
	var res LibpodTagImageConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodTagImageInternalServerErrorBody libpod tag image internal server error body
swagger:model LibpodTagImageInternalServerErrorBody
*/
type LibpodTagImageInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod tag image internal server error body
func (o *LibpodTagImageInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod tag image internal server error body based on context it is used
func (o *LibpodTagImageInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodTagImageInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodTagImageInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodTagImageInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodTagImageNotFoundBody libpod tag image not found body
swagger:model LibpodTagImageNotFoundBody
*/
type LibpodTagImageNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod tag image not found body
func (o *LibpodTagImageNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod tag image not found body based on context it is used
func (o *LibpodTagImageNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodTagImageNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodTagImageNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodTagImageNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
