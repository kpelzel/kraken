// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/hpc/kraken/modules/podman/models"
)

// LibpodRemoveImageReader is a Reader for the LibpodRemoveImage structure.
type LibpodRemoveImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LibpodRemoveImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLibpodRemoveImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLibpodRemoveImageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLibpodRemoveImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewLibpodRemoveImageConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLibpodRemoveImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLibpodRemoveImageOK creates a LibpodRemoveImageOK with default headers values
func NewLibpodRemoveImageOK() *LibpodRemoveImageOK {
	return &LibpodRemoveImageOK{}
}

/*LibpodRemoveImageOK handles this case with default header values.

Delete response
*/
type LibpodRemoveImageOK struct {
	Payload []*models.ImageDeleteResponse
}

func (o *LibpodRemoveImageOK) Error() string {
	return fmt.Sprintf("[DELETE /libpod/images/{name:.*}][%d] libpodRemoveImageOK  %+v", 200, o.Payload)
}

func (o *LibpodRemoveImageOK) GetPayload() []*models.ImageDeleteResponse {
	return o.Payload
}

func (o *LibpodRemoveImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodRemoveImageBadRequest creates a LibpodRemoveImageBadRequest with default headers values
func NewLibpodRemoveImageBadRequest() *LibpodRemoveImageBadRequest {
	return &LibpodRemoveImageBadRequest{}
}

/*LibpodRemoveImageBadRequest handles this case with default header values.

Bad parameter in request
*/
type LibpodRemoveImageBadRequest struct {
	Payload *LibpodRemoveImageBadRequestBody
}

func (o *LibpodRemoveImageBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /libpod/images/{name:.*}][%d] libpodRemoveImageBadRequest  %+v", 400, o.Payload)
}

func (o *LibpodRemoveImageBadRequest) GetPayload() *LibpodRemoveImageBadRequestBody {
	return o.Payload
}

func (o *LibpodRemoveImageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveImageBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodRemoveImageNotFound creates a LibpodRemoveImageNotFound with default headers values
func NewLibpodRemoveImageNotFound() *LibpodRemoveImageNotFound {
	return &LibpodRemoveImageNotFound{}
}

/*LibpodRemoveImageNotFound handles this case with default header values.

No such image
*/
type LibpodRemoveImageNotFound struct {
	Payload *LibpodRemoveImageNotFoundBody
}

func (o *LibpodRemoveImageNotFound) Error() string {
	return fmt.Sprintf("[DELETE /libpod/images/{name:.*}][%d] libpodRemoveImageNotFound  %+v", 404, o.Payload)
}

func (o *LibpodRemoveImageNotFound) GetPayload() *LibpodRemoveImageNotFoundBody {
	return o.Payload
}

func (o *LibpodRemoveImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveImageNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodRemoveImageConflict creates a LibpodRemoveImageConflict with default headers values
func NewLibpodRemoveImageConflict() *LibpodRemoveImageConflict {
	return &LibpodRemoveImageConflict{}
}

/*LibpodRemoveImageConflict handles this case with default header values.

Conflict error in operation
*/
type LibpodRemoveImageConflict struct {
	Payload *LibpodRemoveImageConflictBody
}

func (o *LibpodRemoveImageConflict) Error() string {
	return fmt.Sprintf("[DELETE /libpod/images/{name:.*}][%d] libpodRemoveImageConflict  %+v", 409, o.Payload)
}

func (o *LibpodRemoveImageConflict) GetPayload() *LibpodRemoveImageConflictBody {
	return o.Payload
}

func (o *LibpodRemoveImageConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveImageConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLibpodRemoveImageInternalServerError creates a LibpodRemoveImageInternalServerError with default headers values
func NewLibpodRemoveImageInternalServerError() *LibpodRemoveImageInternalServerError {
	return &LibpodRemoveImageInternalServerError{}
}

/*LibpodRemoveImageInternalServerError handles this case with default header values.

Internal server error
*/
type LibpodRemoveImageInternalServerError struct {
	Payload *LibpodRemoveImageInternalServerErrorBody
}

func (o *LibpodRemoveImageInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /libpod/images/{name:.*}][%d] libpodRemoveImageInternalServerError  %+v", 500, o.Payload)
}

func (o *LibpodRemoveImageInternalServerError) GetPayload() *LibpodRemoveImageInternalServerErrorBody {
	return o.Payload
}

func (o *LibpodRemoveImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(LibpodRemoveImageInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LibpodRemoveImageBadRequestBody libpod remove image bad request body
swagger:model LibpodRemoveImageBadRequestBody
*/
type LibpodRemoveImageBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove image bad request body
func (o *LibpodRemoveImageBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove image bad request body based on context it is used
func (o *LibpodRemoveImageBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveImageBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveImageBadRequestBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveImageBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodRemoveImageConflictBody libpod remove image conflict body
swagger:model LibpodRemoveImageConflictBody
*/
type LibpodRemoveImageConflictBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove image conflict body
func (o *LibpodRemoveImageConflictBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove image conflict body based on context it is used
func (o *LibpodRemoveImageConflictBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveImageConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveImageConflictBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveImageConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodRemoveImageInternalServerErrorBody libpod remove image internal server error body
swagger:model LibpodRemoveImageInternalServerErrorBody
*/
type LibpodRemoveImageInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove image internal server error body
func (o *LibpodRemoveImageInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove image internal server error body based on context it is used
func (o *LibpodRemoveImageInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveImageInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveImageInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveImageInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LibpodRemoveImageNotFoundBody libpod remove image not found body
swagger:model LibpodRemoveImageNotFoundBody
*/
type LibpodRemoveImageNotFoundBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this libpod remove image not found body
func (o *LibpodRemoveImageNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this libpod remove image not found body based on context it is used
func (o *LibpodRemoveImageNotFoundBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LibpodRemoveImageNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LibpodRemoveImageNotFoundBody) UnmarshalBinary(b []byte) error {
	var res LibpodRemoveImageNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
