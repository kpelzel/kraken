// Code generated by go-swagger; DO NOT EDIT.

package volumes_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/hpc/kraken/modules/podman/models"
)

// NewCreateVolumeParams creates a new CreateVolumeParams object
// with the default values initialized.
func NewCreateVolumeParams() *CreateVolumeParams {
	var ()
	return &CreateVolumeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateVolumeParamsWithTimeout creates a new CreateVolumeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateVolumeParamsWithTimeout(timeout time.Duration) *CreateVolumeParams {
	var ()
	return &CreateVolumeParams{

		timeout: timeout,
	}
}

// NewCreateVolumeParamsWithContext creates a new CreateVolumeParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateVolumeParamsWithContext(ctx context.Context) *CreateVolumeParams {
	var ()
	return &CreateVolumeParams{

		Context: ctx,
	}
}

// NewCreateVolumeParamsWithHTTPClient creates a new CreateVolumeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateVolumeParamsWithHTTPClient(client *http.Client) *CreateVolumeParams {
	var ()
	return &CreateVolumeParams{
		HTTPClient: client,
	}
}

/*CreateVolumeParams contains all the parameters to send to the API endpoint
for the create volume operation typically these are written to a http.Request
*/
type CreateVolumeParams struct {

	/*Create
	  attributes for creating a container.
	Note: If a volume by the same name exists, a 201 response with that volume's information will be generated.


	*/
	Create *models.DockerVolumeCreate

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create volume params
func (o *CreateVolumeParams) WithTimeout(timeout time.Duration) *CreateVolumeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create volume params
func (o *CreateVolumeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create volume params
func (o *CreateVolumeParams) WithContext(ctx context.Context) *CreateVolumeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create volume params
func (o *CreateVolumeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create volume params
func (o *CreateVolumeParams) WithHTTPClient(client *http.Client) *CreateVolumeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create volume params
func (o *CreateVolumeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreate adds the create to the create volume params
func (o *CreateVolumeParams) WithCreate(create *models.DockerVolumeCreate) *CreateVolumeParams {
	o.SetCreate(create)
	return o
}

// SetCreate adds the create to the create volume params
func (o *CreateVolumeParams) SetCreate(create *models.DockerVolumeCreate) {
	o.Create = create
}

// WriteToRequest writes these params to a swagger request
func (o *CreateVolumeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Create != nil {
		if err := r.SetBodyParam(o.Create); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
