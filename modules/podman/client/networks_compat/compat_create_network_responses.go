// Code generated by go-swagger; DO NOT EDIT.

package networks_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/hpc/kraken/modules/podman/models"
)

// CompatCreateNetworkReader is a Reader for the CompatCreateNetwork structure.
type CompatCreateNetworkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CompatCreateNetworkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCompatCreateNetworkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCompatCreateNetworkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCompatCreateNetworkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCompatCreateNetworkOK creates a CompatCreateNetworkOK with default headers values
func NewCompatCreateNetworkOK() *CompatCreateNetworkOK {
	return &CompatCreateNetworkOK{}
}

/*CompatCreateNetworkOK handles this case with default header values.

Network create
*/
type CompatCreateNetworkOK struct {
	Payload *CompatCreateNetworkOKBody
}

func (o *CompatCreateNetworkOK) Error() string {
	return fmt.Sprintf("[POST /networks/create][%d] compatCreateNetworkOK  %+v", 200, o.Payload)
}

func (o *CompatCreateNetworkOK) GetPayload() *CompatCreateNetworkOKBody {
	return o.Payload
}

func (o *CompatCreateNetworkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CompatCreateNetworkOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompatCreateNetworkBadRequest creates a CompatCreateNetworkBadRequest with default headers values
func NewCompatCreateNetworkBadRequest() *CompatCreateNetworkBadRequest {
	return &CompatCreateNetworkBadRequest{}
}

/*CompatCreateNetworkBadRequest handles this case with default header values.

Bad parameter in request
*/
type CompatCreateNetworkBadRequest struct {
	Payload *CompatCreateNetworkBadRequestBody
}

func (o *CompatCreateNetworkBadRequest) Error() string {
	return fmt.Sprintf("[POST /networks/create][%d] compatCreateNetworkBadRequest  %+v", 400, o.Payload)
}

func (o *CompatCreateNetworkBadRequest) GetPayload() *CompatCreateNetworkBadRequestBody {
	return o.Payload
}

func (o *CompatCreateNetworkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CompatCreateNetworkBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompatCreateNetworkInternalServerError creates a CompatCreateNetworkInternalServerError with default headers values
func NewCompatCreateNetworkInternalServerError() *CompatCreateNetworkInternalServerError {
	return &CompatCreateNetworkInternalServerError{}
}

/*CompatCreateNetworkInternalServerError handles this case with default header values.

Internal server error
*/
type CompatCreateNetworkInternalServerError struct {
	Payload *CompatCreateNetworkInternalServerErrorBody
}

func (o *CompatCreateNetworkInternalServerError) Error() string {
	return fmt.Sprintf("[POST /networks/create][%d] compatCreateNetworkInternalServerError  %+v", 500, o.Payload)
}

func (o *CompatCreateNetworkInternalServerError) GetPayload() *CompatCreateNetworkInternalServerErrorBody {
	return o.Payload
}

func (o *CompatCreateNetworkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CompatCreateNetworkInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CompatCreateNetworkBadRequestBody compat create network bad request body
swagger:model CompatCreateNetworkBadRequestBody
*/
type CompatCreateNetworkBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this compat create network bad request body
func (o *CompatCreateNetworkBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this compat create network bad request body based on context it is used
func (o *CompatCreateNetworkBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CompatCreateNetworkBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CompatCreateNetworkBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CompatCreateNetworkBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CompatCreateNetworkInternalServerErrorBody compat create network internal server error body
swagger:model CompatCreateNetworkInternalServerErrorBody
*/
type CompatCreateNetworkInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this compat create network internal server error body
func (o *CompatCreateNetworkInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this compat create network internal server error body based on context it is used
func (o *CompatCreateNetworkInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CompatCreateNetworkInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CompatCreateNetworkInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res CompatCreateNetworkInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CompatCreateNetworkOKBody compat create network o k body
swagger:model CompatCreateNetworkOKBody
*/
type CompatCreateNetworkOKBody struct {

	// attachable
	Attachable bool `json:"Attachable,omitempty"`

	// Check for networks with duplicate names.
	// Network is primarily keyed based on a random ID and not on the name.
	// Network name is strictly a user-friendly alias to the network
	// which is uniquely identified using ID.
	// And there is no guaranteed way to check for duplicates.
	// Option CheckDuplicate is there to provide a best effort checking of any networks
	// which has the same name but it is not guaranteed to catch all name collisions.
	CheckDuplicate bool `json:"CheckDuplicate,omitempty"`

	// config from
	ConfigFrom *models.ConfigReference `json:"ConfigFrom,omitempty"`

	// config only
	ConfigOnly bool `json:"ConfigOnly,omitempty"`

	// driver
	Driver string `json:"Driver,omitempty"`

	// enable IPv6
	EnableIPV6 bool `json:"EnableIPv6,omitempty"`

	// IP a m
	IPAM *models.IPAM `json:"IPAM,omitempty"`

	// ingress
	Ingress bool `json:"Ingress,omitempty"`

	// internal
	Internal bool `json:"Internal,omitempty"`

	// labels
	Labels map[string]string `json:"Labels,omitempty"`

	// options
	Options map[string]string `json:"Options,omitempty"`

	// scope
	Scope string `json:"Scope,omitempty"`
}

// Validate validates this compat create network o k body
func (o *CompatCreateNetworkOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConfigFrom(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateIPAM(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CompatCreateNetworkOKBody) validateConfigFrom(formats strfmt.Registry) error {
	if swag.IsZero(o.ConfigFrom) { // not required
		return nil
	}

	if o.ConfigFrom != nil {
		if err := o.ConfigFrom.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("compatCreateNetworkOK" + "." + "ConfigFrom")
			}
			return err
		}
	}

	return nil
}

func (o *CompatCreateNetworkOKBody) validateIPAM(formats strfmt.Registry) error {
	if swag.IsZero(o.IPAM) { // not required
		return nil
	}

	if o.IPAM != nil {
		if err := o.IPAM.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("compatCreateNetworkOK" + "." + "IPAM")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this compat create network o k body based on the context it is used
func (o *CompatCreateNetworkOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateConfigFrom(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateIPAM(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CompatCreateNetworkOKBody) contextValidateConfigFrom(ctx context.Context, formats strfmt.Registry) error {

	if o.ConfigFrom != nil {
		if err := o.ConfigFrom.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("compatCreateNetworkOK" + "." + "ConfigFrom")
			}
			return err
		}
	}

	return nil
}

func (o *CompatCreateNetworkOKBody) contextValidateIPAM(ctx context.Context, formats strfmt.Registry) error {

	if o.IPAM != nil {
		if err := o.IPAM.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("compatCreateNetworkOK" + "." + "IPAM")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CompatCreateNetworkOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CompatCreateNetworkOKBody) UnmarshalBinary(b []byte) error {
	var res CompatCreateNetworkOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
