// Code generated by go-swagger; DO NOT EDIT.

package images_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BuildImageReader is a Reader for the BuildImage structure.
type BuildImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BuildImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBuildImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBuildImageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBuildImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBuildImageOK creates a BuildImageOK with default headers values
func NewBuildImageOK() *BuildImageOK {
	return &BuildImageOK{}
}

/*BuildImageOK handles this case with default header values.

OK (As of version 1.xx)
*/
type BuildImageOK struct {
	Payload *BuildImageOKBody
}

func (o *BuildImageOK) Error() string {
	return fmt.Sprintf("[POST /build][%d] buildImageOK  %+v", 200, o.Payload)
}

func (o *BuildImageOK) GetPayload() *BuildImageOKBody {
	return o.Payload
}

func (o *BuildImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BuildImageOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildImageBadRequest creates a BuildImageBadRequest with default headers values
func NewBuildImageBadRequest() *BuildImageBadRequest {
	return &BuildImageBadRequest{}
}

/*BuildImageBadRequest handles this case with default header values.

Bad parameter in request
*/
type BuildImageBadRequest struct {
	Payload *BuildImageBadRequestBody
}

func (o *BuildImageBadRequest) Error() string {
	return fmt.Sprintf("[POST /build][%d] buildImageBadRequest  %+v", 400, o.Payload)
}

func (o *BuildImageBadRequest) GetPayload() *BuildImageBadRequestBody {
	return o.Payload
}

func (o *BuildImageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BuildImageBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuildImageInternalServerError creates a BuildImageInternalServerError with default headers values
func NewBuildImageInternalServerError() *BuildImageInternalServerError {
	return &BuildImageInternalServerError{}
}

/*BuildImageInternalServerError handles this case with default header values.

Internal server error
*/
type BuildImageInternalServerError struct {
	Payload *BuildImageInternalServerErrorBody
}

func (o *BuildImageInternalServerError) Error() string {
	return fmt.Sprintf("[POST /build][%d] buildImageInternalServerError  %+v", 500, o.Payload)
}

func (o *BuildImageInternalServerError) GetPayload() *BuildImageInternalServerErrorBody {
	return o.Payload
}

func (o *BuildImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BuildImageInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BuildImageBadRequestBody build image bad request body
swagger:model BuildImageBadRequestBody
*/
type BuildImageBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this build image bad request body
func (o *BuildImageBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this build image bad request body based on context it is used
func (o *BuildImageBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BuildImageBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BuildImageBadRequestBody) UnmarshalBinary(b []byte) error {
	var res BuildImageBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BuildImageInternalServerErrorBody build image internal server error body
swagger:model BuildImageInternalServerErrorBody
*/
type BuildImageInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this build image internal server error body
func (o *BuildImageInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this build image internal server error body based on context it is used
func (o *BuildImageInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BuildImageInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BuildImageInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res BuildImageInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BuildImageOKBody build image o k body
swagger:model BuildImageOKBody
*/
type BuildImageOKBody struct {

	// output from build process
	// Example: (build details...)\nSuccessfully built 8ba084515c724cbf90d447a63600c0a6\n
	// Required: true
	Stream *string `json:"stream"`
}

// Validate validates this build image o k body
func (o *BuildImageOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStream(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BuildImageOKBody) validateStream(formats strfmt.Registry) error {

	if err := validate.Required("buildImageOK"+"."+"stream", "body", o.Stream); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this build image o k body based on context it is used
func (o *BuildImageOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BuildImageOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BuildImageOKBody) UnmarshalBinary(b []byte) error {
	var res BuildImageOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
