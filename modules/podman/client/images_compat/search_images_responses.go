// Code generated by go-swagger; DO NOT EDIT.

package images_compat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchImagesReader is a Reader for the SearchImages structure.
type SearchImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchImagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchImagesOK creates a SearchImagesOK with default headers values
func NewSearchImagesOK() *SearchImagesOK {
	return &SearchImagesOK{}
}

/*SearchImagesOK handles this case with default header values.

Search results
*/
type SearchImagesOK struct {
	Payload *SearchImagesOKBody
}

func (o *SearchImagesOK) Error() string {
	return fmt.Sprintf("[GET /images/search][%d] searchImagesOK  %+v", 200, o.Payload)
}

func (o *SearchImagesOK) GetPayload() *SearchImagesOKBody {
	return o.Payload
}

func (o *SearchImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchImagesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchImagesBadRequest creates a SearchImagesBadRequest with default headers values
func NewSearchImagesBadRequest() *SearchImagesBadRequest {
	return &SearchImagesBadRequest{}
}

/*SearchImagesBadRequest handles this case with default header values.

Bad parameter in request
*/
type SearchImagesBadRequest struct {
	Payload *SearchImagesBadRequestBody
}

func (o *SearchImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /images/search][%d] searchImagesBadRequest  %+v", 400, o.Payload)
}

func (o *SearchImagesBadRequest) GetPayload() *SearchImagesBadRequestBody {
	return o.Payload
}

func (o *SearchImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchImagesBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchImagesInternalServerError creates a SearchImagesInternalServerError with default headers values
func NewSearchImagesInternalServerError() *SearchImagesInternalServerError {
	return &SearchImagesInternalServerError{}
}

/*SearchImagesInternalServerError handles this case with default header values.

Internal server error
*/
type SearchImagesInternalServerError struct {
	Payload *SearchImagesInternalServerErrorBody
}

func (o *SearchImagesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /images/search][%d] searchImagesInternalServerError  %+v", 500, o.Payload)
}

func (o *SearchImagesInternalServerError) GetPayload() *SearchImagesInternalServerErrorBody {
	return o.Payload
}

func (o *SearchImagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SearchImagesInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SearchImagesBadRequestBody search images bad request body
swagger:model SearchImagesBadRequestBody
*/
type SearchImagesBadRequestBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this search images bad request body
func (o *SearchImagesBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search images bad request body based on context it is used
func (o *SearchImagesBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchImagesBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchImagesBadRequestBody) UnmarshalBinary(b []byte) error {
	var res SearchImagesBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*SearchImagesInternalServerErrorBody search images internal server error body
swagger:model SearchImagesInternalServerErrorBody
*/
type SearchImagesInternalServerErrorBody struct {

	// API root cause formatted for automated parsing
	// Example: API root cause
	Because string `json:"cause,omitempty"`

	// human error message, formatted for a human to read
	// Example: human error message
	Message string `json:"message,omitempty"`

	// http response code
	ResponseCode int64 `json:"response,omitempty"`
}

// Validate validates this search images internal server error body
func (o *SearchImagesInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search images internal server error body based on context it is used
func (o *SearchImagesInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchImagesInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchImagesInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res SearchImagesInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*SearchImagesOKBody search images o k body
swagger:model SearchImagesOKBody
*/
type SearchImagesOKBody struct {

	// Automated indicates if the image was created by an automated build.
	Automated string `json:"Automated,omitempty"`

	// Description of the image.
	Description string `json:"Description,omitempty"`

	// Index is the image index (e.g., "docker.io" or "quay.io")
	Index string `json:"Index,omitempty"`

	// Name is the canoncical name of the image (e.g., "docker.io/library/alpine").
	Name string `json:"Name,omitempty"`

	// Official indicates if it's an official image.
	Official string `json:"Official,omitempty"`

	// Stars is the number of stars of the image.
	Stars int64 `json:"Stars,omitempty"`
}

// Validate validates this search images o k body
func (o *SearchImagesOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search images o k body based on context it is used
func (o *SearchImagesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SearchImagesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SearchImagesOKBody) UnmarshalBinary(b []byte) error {
	var res SearchImagesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
