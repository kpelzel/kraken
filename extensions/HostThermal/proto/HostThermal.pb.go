// Code generated by protoc-gen-go. DO NOT EDIT.
// source: HostThermal.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HostThermalCpuState int32

const (
	HostThermal_CPU_TEMP_NONE     HostThermalCpuState = 0
	HostThermal_CPU_TEMP_NORMAL   HostThermalCpuState = 1
	HostThermal_CPU_TEMP_HIGH     HostThermalCpuState = 2
	HostThermal_CPU_TEMP_CRITICAL HostThermalCpuState = 3
)

var HostThermalCpuState_name = map[int32]string{
	0: "CPU_TEMP_NONE",
	1: "CPU_TEMP_NORMAL",
	2: "CPU_TEMP_HIGH",
	3: "CPU_TEMP_CRITICAL",
}
var HostThermalCpuState_value = map[string]int32{
	"CPU_TEMP_NONE":     0,
	"CPU_TEMP_NORMAL":   1,
	"CPU_TEMP_HIGH":     2,
	"CPU_TEMP_CRITICAL": 3,
}

func (x HostThermalCpuState) String() string {
	return proto.EnumName(HostThermalCpuState_name, int32(x))
}
func (HostThermalCpuState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_HostThermal_8fa7e7c7b793310f, []int{0, 0}
}

type HostThermal struct {
	State                HostThermalCpuState `protobuf:"varint,1,opt,name=state,proto3,enum=proto.HostThermalCpuState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *HostThermal) Reset()         { *m = HostThermal{} }
func (m *HostThermal) String() string { return proto.CompactTextString(m) }
func (*HostThermal) ProtoMessage()    {}
func (*HostThermal) Descriptor() ([]byte, []int) {
	return fileDescriptor_HostThermal_8fa7e7c7b793310f, []int{0}
}
func (m *HostThermal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostThermal.Unmarshal(m, b)
}
func (m *HostThermal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostThermal.Marshal(b, m, deterministic)
}
func (dst *HostThermal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostThermal.Merge(dst, src)
}
func (m *HostThermal) XXX_Size() int {
	return xxx_messageInfo_HostThermal.Size(m)
}
func (m *HostThermal) XXX_DiscardUnknown() {
	xxx_messageInfo_HostThermal.DiscardUnknown(m)
}

var xxx_messageInfo_HostThermal proto.InternalMessageInfo

func (m *HostThermal) GetState() HostThermalCpuState {
	if m != nil {
		return m.State
	}
	return HostThermal_CPU_TEMP_NONE
}

func (m *HostThermal) GetTemp() uint32 {
	if m != nil {
		return m.Temp
	}
	return 0
}

func init() {
	proto.RegisterType((*HostThermal)(nil), "proto.HostThermal")
	proto.RegisterEnum("proto.HostThermalCpuState", HostThermalCpuState_name, HostThermalCpuState_value)
}

func init() { proto.RegisterFile("HostThermal.proto", fileDescriptor_HostThermal_8fa7e7c7b793310f) }

var fileDescriptor_HostThermal_8fa7e7c7b793310f = []byte{
	// 151 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf4, 0xc8, 0x2f, 0x2e,
	0x09, 0xc9, 0x48, 0x2d, 0xca, 0x4d, 0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05,
	0x53, 0x4a, 0xf3, 0x18, 0xb9, 0xb8, 0x91, 0x24, 0x85, 0x0c, 0xb9, 0x58, 0x8b, 0x4b, 0x12, 0x4b,
	0x52, 0x25, 0x18, 0x15, 0x18, 0x35, 0xf8, 0x8c, 0xa4, 0x21, 0xaa, 0xf5, 0x90, 0xf5, 0x27, 0x17,
	0x94, 0x06, 0x83, 0x94, 0x04, 0x41, 0x54, 0x2a, 0xc5, 0x70, 0x71, 0xc0, 0x84, 0x84, 0x04, 0xb9,
	0x78, 0x9d, 0x03, 0x42, 0xe3, 0x43, 0x5c, 0x7d, 0x03, 0xe2, 0xfd, 0xfc, 0xfd, 0x5c, 0x05, 0x18,
	0x84, 0x84, 0xb9, 0xf8, 0x91, 0x84, 0x82, 0x7c, 0x1d, 0x7d, 0x04, 0x18, 0x51, 0xd4, 0x79, 0x78,
	0xba, 0x7b, 0x08, 0x30, 0x09, 0x89, 0x72, 0x09, 0xc2, 0x85, 0x9c, 0x83, 0x3c, 0x43, 0x3c, 0x9d,
	0x1d, 0x7d, 0x04, 0x98, 0x93, 0xd8, 0xc0, 0x0e, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe7,
	0xf7, 0x25, 0x52, 0xc3, 0x00, 0x00, 0x00,
}
